{
    "scope": "source.brightscript",

    "completions":
    [

    // key words
    {"trigger": "and\tkeyword", "contents": "and"},
    {"trigger": "as\tkeyword", "contents": "as"},
    {"trigger": "False\tkeyword", "contents": "False"},
    {"trigger": "for\tkeyword", "contents": "for"},
    {"trigger": "in\tkeyword", "contents": "in"},
    {"trigger": "Invalid\tkeyword", "contents": "Invalid"},
    {"trigger": "not\tkeyword", "contents": "not"},
    {"trigger": "or\tkeyword", "contents": "or"},
    {"trigger": "print\tkeyword", "contents": "print"},
    {"trigger": "return\tkeyword", "contents": "return"},
    {"trigger": "True\tkeyword", "contents": "True"},
    {"trigger": "while\tkeyword", "contents": "while"},


    // Brightscript Components
    {"trigger": "roAppInfo\tComponent", "contents": "roAppInfo"},
    {"trigger": "roAppManager\tComponent", "contents": "roAppManager"},
    {"trigger": "roArray\tComponent", "contents": "roArray"},
    {"trigger": "roAssociativeArray\tComponent", "contents": "roAssociativeArray"},
    {"trigger": "roAudioMetadata\tComponent", "contents": "roAudioMetadata"},
    {"trigger": "roAudioPlayer\tComponent", "contents": "roAudioPlayer"},
    {"trigger": "roAudioResource\tComponent", "contents": "roAudioResource"},
    {"trigger": "roBitmap\tComponent", "contents": "roBitmap"},
    {"trigger": "roBoolean\tComponent", "contents": "roBoolean"},
    {"trigger": "roByteArray\tComponent", "contents": "roByteArray"},
    {"trigger": "roCaptionRenderer\tComponent", "contents": "roCaptionRenderer"},
    {"trigger": "roChannelStore\tComponent", "contents": "roChannelStore"},
    {"trigger": "roCodeRegistrationScreen\tComponent", "contents": "roCodeRegistrationScreen"},
    {"trigger": "roCompositor\tComponent", "contents": "roCompositor"},
    {"trigger": "roDataGramSocket\tComponent", "contents": "roDataGramSocket"},
    {"trigger": "roDateTime\tComponent", "contents": "roDateTime"},
    {"trigger": "roDeviceInfo\tComponent", "contents": "roDeviceInfo"},
    {"trigger": "roEVPCipher\tComponent", "contents": "roEVPCipher"},
    {"trigger": "roEVPDigest\tComponent", "contents": "roEVPDigest"},
    {"trigger": "roFileSystem\tComponent", "contents": "roFileSystem"},
    {"trigger": "roFloat\tComponent", "contents": "roFloat"},
    {"trigger": "roFont\tComponent", "contents": "roFont"},
    {"trigger": "roFontRegistry\tComponent", "contents": "roFontRegistry"},
    {"trigger": "roFunction\tComponent", "contents": "roFunction"},
    {"trigger": "roGridScreen\tComponent", "contents": "roGridScreen"},
    {"trigger": "roHMAC\tComponent", "contents": "roHMAC"},
    {"trigger": "roImageCanvas\tComponent", "contents": "roImageCanvas"},
    {"trigger": "roImageMetadata\tComponent", "contents": "roImageMetadata"},
    {"trigger": "roInt\tComponent", "contents": "roInt"},
    {"trigger": "roInvalid\tComponent", "contents": "roInvalid"},
    {"trigger": "roKeyboardScreen\tComponent", "contents": "roKeyboardScreen"},
    {"trigger": "roList\tComponent", "contents": "roList"},
    {"trigger": "roListScreen\tComponent", "contents": "roListScreen"},
    {"trigger": "roLocalization\tComponent", "contents": "roLocalization"},
    {"trigger": "roMessageDialog\tComponent", "contents": "roMessageDialog"},
    {"trigger": "roMessagePort\tComponent", "contents": "roMessagePort"},
    {"trigger": "roOneLineDialog\tComponent", "contents": "roOneLineDialog"},
    {"trigger": "roParagraphScreen\tComponent", "contents": "roParagraphScreen"},
    {"trigger": "roPath\tComponent", "contents": "roPath"},
    {"trigger": "roPinEntryDialog\tComponent", "contents": "roPinEntryDialog"},
    {"trigger": "roPosterScreen\tComponent", "contents": "roPosterScreen"},
    {"trigger": "roRegex\tComponent", "contents": "roRegex"},
    {"trigger": "roRegion\tComponent", "contents": "roRegion"},
    {"trigger": "roRegistry\tComponent", "contents": "roRegistry"},
    {"trigger": "roRegistrySection\tComponent", "contents": "roRegistrySection"},
    {"trigger": "roRSA\tComponent", "contents": "roRSA"},
    {"trigger": "roScreen\tComponent", "contents": "roScreen"},
    {"trigger": "roSearchHistory\tComponent", "contents": "roSearchHistory"},
    {"trigger": "roSearchScreen\tComponent", "contents": "roSearchScreen"},
    {"trigger": "roSlideShow\tComponent", "contents": "roSlideShow"},
    {"trigger": "roSocketAddress\tComponent", "contents": "roSocketAddress"},
    {"trigger": "roSpringboardScreen\tComponent", "contents": "roSpringboardScreen"},
    {"trigger": "roSprite\tComponent", "contents": "roSprite"},
    {"trigger": "roStreamSocket\tComponent", "contents": "roStreamSocket"},
    {"trigger": "roString\tComponent", "contents": "roString"},
    {"trigger": "roSystemLog\tComponent", "contents": "roSystemLog"},
    {"trigger": "roTextScreen\tComponent", "contents": "roTextScreen"},
    {"trigger": "roTextureManager\tComponent", "contents": "roTextureManager"},
    {"trigger": "roTextureRequest\tComponent", "contents": "roTextureRequest"},
    {"trigger": "roTimespan\tComponent", "contents": "roTimespan"},
    {"trigger": "roUrlTransfer\tComponent", "contents": "roUrlTransfer"},
    {"trigger": "roVideoPlayer\tComponent", "contents": "roVideoPlayer"},
    {"trigger": "roVideoScreen\tComponent", "contents": "roVideoScreen"},
    {"trigger": "roXMLElement\tComponent", "contents": "roXMLElement"},
    {"trigger": "roXMLList \tComponent", "contents": "roXMLList "},

    //ifAppInfo Methods
    {"trigger": "GetID()\tifAppInfo - as String", "contents": "GetID()"},
    {"trigger": "IsDev()\tifAppInfo - as Boolean", "contents": "IsDev()"},
    {"trigger": "GetVersion()\tifAppInfo - as String", "contents": "GetVersion()"},
    {"trigger": "GetTitle()\tifAppInfo - as String", "contents": "GetTitle()"},
    {"trigger": "GetSubtitle()\tifAppInfo - as String", "contents": "GetSubtitle()"},
    {"trigger": "GetDevID()\tifAppInfo - as String", "contents": "GetDevID()"},
    {"trigger": "GetValue()\tifAppInfo - as String", "contents": "GetValue(${1:key as String})"},

    // ifAppManager Methods
    {"trigger": "SetTheme()\tifAppManager - as Void", "contents": "SetTheme(${1:attributeArray as Object})"},
    {"trigger": "SetThemeAttribute()\tifAppManager - as Void", "contents": "SetThemeAttribute(${1:attributeName as String}, ${2:attributeValue as String})"},
    {"trigger": "ClearThemeAttribute()\tifAppManager - as Void", "contents": "ClearThemeAttribute(${1:attributeName as String})"},
    {"trigger": "GetUpTime()\tifAppManager - as Object", "contents": "GetUpTime()"},

    // ifArray Methods
    {"trigger": "Peek()\tifArray - as Dynamic", "contents": "Peek()"},
    {"trigger": "Pop()\tifArray - as Dynamic", "contents": "Pop()"},
    {"trigger": "Push()\tifArray - as Void", "contents": "Push(${1:tvalue as Dynamic})"},
    {"trigger": "Shift()\tifArray - as Dynamic", "contents": "Shift()"},
    {"trigger": "Unshift()\tifArray - as Void", "contents": "Unshift(${1:tvalue as Dynamic})"},
    {"trigger": "Delete()\tifArray - as Boolean", "contents": "Delete(${1:index as Integer})"},
    {"trigger": "Count()\tifArray - as Integer", "contents": "Count()"},
    {"trigger": "Clear()\tifArray - as Void", "contents": "Clear()"},
    {"trigger": "Append()\tifArray - as Void", "contents": "Append(${1:array as Object})"},
    {"trigger": "GetEntry()\tifArray - as Dynamic", "contents": "GetEntry(${1:index as Integer})"},
    {"trigger": "SetEntry()\tifArray - as Void", "contents": "SetEntry(${1:index as Integer}, ${2:tvalue as Dynamic})"},

    // ifAssociativeArray Methods
    {"trigger": "AddReplace()\tifAssociativeArray - as Void", "contents": "AddReplace(${1:key as String}, ${2:value as Dynamic})"},
    {"trigger": "Lookup()\tifAssociativeArray - as Dynamic", "contents": "Lookup(${1:key as String})"},
    {"trigger": "DoesExist()\tifAssociativeArray - as Boolean", "contents": "DoesExist(${1:key as String})"},
    {"trigger": "Delete()\tifAssociativeArray - as Boolean", "contents": "Delete(${1:key as String})"},
    {"trigger": "Clear()\tifAssociativeArray - as Void", "contents": "Clear()"},
    {"trigger": "SetModeCaseSensitive()\tifAssociativeArray - as Void", "contents": "SetModeCaseSensitive()"},
    {"trigger": "LookupCI()\tifAssociativeArray - as Dynamic", "contents": "LookupCI(${1:key as String})"},
    {"trigger": "Append()\tifAssociativeArray - as Void", "contents": "Append(${1:aa as Object})"},
    {"trigger": "Count()\tifAssociativeArray - as Integer", "contents": "Count()"},

    // ifAudioMetadata Methods
    {"trigger": "SetUrl()\tifAudioMetadata - as Void", "contents": "SetUrl(${1:url as String})"},
    {"trigger": "GetTags()\tifAudioMetadata - as Object", "contents": "GetTags()"},
    {"trigger": "GetAudioProperties()\tifAudioMetadata - as Object", "contents": "GetAudioProperties()"},
    {"trigger": "GetCoverArt()\tifAudioMetadata - as Object", "contents": "GetCoverArt()"},

    // ifAudioPlayer Methods
    {"trigger": "SetContentList()\tifAudioPlayer - as Void", "contents": "SetContentList(${1:contentList as Object})"},
    {"trigger": "AddContent()\tifAudioMetadata - as Void", "contents": "AddContent(${1:contentItem as Object})"},
    {"trigger": "ClearContent()\tifAudioMetadata - as Void", "contents": "ClearContent()"},
    {"trigger": "Play()\tifAudioMetadata - as Boolean", "contents": "Play()"},
    {"trigger": "Stop()\tifAudioMetadata - as Boolean", "contents": "Stop()"},
    {"trigger": "Pause()\tifAudioMetadata - as Boolean", "contents": "Pause()"},
    {"trigger": "Resume()\tifAudioMetadata - as Boolean", "contents": "Resume()"},
    {"trigger": "SetLoop()\tifAudioMetadata - as Void", "contents": "SetLoop(${1:enable as Boolean})"},
    {"trigger": "SetNext()\tifAudioMetadata - as Void", "contents": "SetNext(${1:item as Integer})"},
    {"trigger": "Seek()\tifAudioMetadata - as Boolean", "contents": "Seek(${1:offsetMs as Integer})"},
    {"trigger": "SetTimeMetaDataForKeys()\tifAudioMetadata - as Void", "contents": "SetTimeMetaDataForKeys(${1:keys as Dynamic})"},

    // ifAudioResource Methods
    {"trigger": "Trigger()\tifAudioResource - as Void", "contents": "Trigger(${1:volume as Integer})"},
    {"trigger": "IsPlaying()\tifAudioResource - as Boolean", "contents": "IsPlaying()"},
    {"trigger": "Stop()\tifAudioResource - as Void", "contents": "Stop()"},
    {"trigger": "MaxSimulStreams()\tifAudioResource - as Integer", "contents": "MaxSimulStreams()"},
    {"trigger": "GetMetaData()\tifAudioResource - as Object", "contents": "GetMetaData()"},

    // ifBytArray Methods
    {"trigger": "WriteFile()\tifByteArray - as Boolean", "contents": "WriteFile(${1:path as String}${2:, [start_index as Integer]}${3:, [length as Integer]})"},
    {"trigger": "ReadFile()\tifByteArray - as Boolean", "contents": "ReadFile(${1:path as String}${2:, [start_pos as Integer]}${3:, [length as Integer]})"},
    {"trigger": "AppendFile()\tifByteArray - as Boolean", "contents": "AppendFile(${1:path as String})"},
    {"trigger": "SetResize()\tifByteArray - as Boolean", "contents": "SetResize(${1:min_size as Integer}, ${2:auto_resize as Boolean})"},
    {"trigger": "ToHexString()\tifByteArray - as String", "contents": "ToHexString()"},
    {"trigger": "FromHexString()\tifByteArray - as Void", "contents": "FromHexString(${1:hexstring as String})"},
    {"trigger": "ToBase64String()\tifByteArray - as String", "contents": "ToBase64String()"},
    {"trigger": "FromBase64String()\tifByteArray - as Void", "contents": "FromBase64String(${1:s as String})"},
    {"trigger": "ToAsciiString()\tifByteArray - as String", "contents": "ToAsciiString()"},
    {"trigger": "FromAsciiString()\tifByteArray", "contents": "FromAsciiString(${1:s as String})"},
    {"trigger": "GetSignedByte()\tifByteArray - as Integer", "contents": "GetSignedByte(${1:index as Integer})"},
    {"trigger": "GetSignedLong()\tifByteArray - as Integer", "contents": "GetSignedLong(${1:index as Integer})"},
    {"trigger": "IsLittleEndianCPU()\tifByteArray - as Boolean", "contents": "IsLittleEndianCPU()"},

    // ifCaptionRenderer Methods 
    {"trigger": "SetMode\tif - as Void", "contents": "SetMode(${1:mode as Integer})"},
    {"trigger": "SetScreen\tif - as Void", "contents": "SetScreen(${1:screen as Object})"},
    {"trigger": "SetMessagePort\tif - as Void", "contents": "SetMessagePort(${1:port as Object})"},
    {"trigger": "ShowSubtitle\tif - as Void", "contents": "ShowSubtitle(${1:enable as Boolean})"},
    {"trigger": "UpdateCaption\tif - as Void", "contents": "UpdateCaption()"},
    {"trigger": "GetSubtitleTracks\tif - as Object", "contents": "GetSubtitleTracks()"},
    {"trigger": "ChangeSubtitleTrack\tif - as Void", "contents": "ChangeSubtitleTrack(${1:track as String})"},

    // ifChannelStore Methods
    {"trigger": "GetCatalog\tif - as Void", "contents": "GetCatalog()"},
    {"trigger": "GetStoreCatalog\tif - as Void", "contents": "GetStoreCatalog()"},
    {"trigger": "GetPurchases\tif - as Void", "contents": "GetPurchases()"},
    {"trigger": "GetUpgrade\tif - as Void", "contents": "GetUpgrade()"},
    {"trigger": "SetOrder\tif - as Void", "contents": "SetOrder(${1:order as Object})"},
    {"trigger": "ClearOrder\tif - as Void", "contents": "ClearOrder()"},
    {"trigger": "DeltaOrder\tif - as Integer", "contents": "DeltaOrder(${1:code as Object}, ${2:qty as Integer})"},
    {"trigger": "GetOrder\tif - as Objcet", "contents": "GetOrder()"},
    {"trigger": "DoOrder\tif - as Boolean", "contents": "DoOrder()"},
    {"trigger": "DoUpgrade\tif - as String", "contents": "DoUpgrade()"},
    {"trigger": "FakeServer\tif - as Void", "contents": "FakeServer(${1:enable as Boolean})"},
    {"trigger": "GetUserData\tif - as Object", "contents": "GetUserData()"},
    {"trigger": "GetPartialUserData\tif - as Object", "contents": "GetPartialUserData(${1:properties as String})"},

    // ifCodeRegistrationScreen Methods
    {"trigger": "SetTitle\tifCodeRegistrationScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "AddHeaderText\tifCodeRegistrationScreen - as Void", "contents": "AddHeaderText(${1:text as String})"},
    {"trigger": "AddParagraph\tifCodeRegistrationScreen - as Void", "contents": "AddParagraph(${1:text as String})"},
    {"trigger": "AddButton\tifCodeRegistrationScreen - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddFocalText\tifCodeRegistrationScreen - as Void", "contents": "AddFocalText(${1:text as String}, ${2:spacingFormat as String})"},
    {"trigger": "SetBreadcrumbText\tifCodeRegistrationScreen - as Void", "contents": "SetBreadcrumbText(${1:text_1 as String}, ${2:text_2 as String})"},
    {"trigger": "SetRegistrationCode\tifCodeRegistrationScreen - as Void", "contents": "SetRegistrationCode(${1:regCode as String})"},
    
    // ifCompositor Methods
    {"trigger": "SetDrawTo\tifCompositor - as Void", "contents": "SetDrawTo(${1:destBitmap as Object}, ${2:rgbaBackground as Integer})"},
    {"trigger": "Draw\tifCompositor - as Void", "contents": "Draw()"},
    {"trigger": "DrawAll\tifCompositor - as Void", "contents": "DrawAll()"},
    {"trigger": "NewSprite\tifCompositor - as Object", "contents": "NewSprite(${1:x as Integer}, ${2:y as Integer}, ${3:region as Object}, ${4:z as Integer})"},
    {"trigger": "NewAnimatedSprite\tifCompositor - as Object", "contents": "NewAnimatedSprite(${1:x as Integer}, ${2:y as Integer}, ${3:regionArray as Object}, ${4:z as Integer})"},
    {"trigger": "AnimationTick\tifCompositor - as Void", "contents": "AnimationTick(${1:duration as Integer})"},
    {"trigger": "ChangeMatchingRegions\tifCompositor - as Void", "contents": "ChangeMatchingRegions(${1:oldRegion as Object}, ${2:newRegion as Object})"},

    // Applies To Multiple Interfaces
    {"trigger": "Show\tifMulti - as Boolean", "contents": "Show()"},
    {"trigger": "Close\tifMulti - as Void", "contents": "Close()"},

    // ifScreen Methods
    {"trigger": "SwapBuffers()\tMethod - as Void", "contents": "SwapBuffers()"},
    
    // ifDraw2D Methods
    {"trigger": "Clear()\tMethod - as Void", "contents": "Clear(${1:rgba as Integer})"},
    {"trigger": "GetWidth()\tMethod - as Integer", "contents": "GetWidth()"},
    {"trigger": "GetHeight()\tMethod - as Integer", "contents": "GetHeight()"},
    {"trigger": "GetByteArray()\tMethod - as Object", "contents": "GetByteArray(${1:x as Integer}, ${2:y as Integer}, ${3:width as Integer}, ${4:height as Integer})"},
    {"trigger": "GetAlphaEnable()\tMethod - as Boolean", "contents": "GetAlphaEnable()"},
    {"trigger": "SetAlphaEnable()\tMethod - as Void", "contents": "SetAlphaEnable(${1:enable as Boolean})"},
    {"trigger": "DrawRect()\tMethod - as Void", "contents": "DrawRect(${1:x as Integer}, ${2:y as Integer}, ${3:width as Integer}, ${4:height as Integer}, ${5:rgba as Integer})"},
    {"trigger": "DrawPoint()\tMethod - as Void", "contents": "DrawPoint(${1:x as Integer}, ${2:y as Integer}, ${3:size as Float}, ${4:rgba as Integer})"},
    {"trigger": "DrawLine()\tMethod - as Void", "contents": "DrawLine(${1:xStart as Integer}, ${2:yStart as Integer}, ${3:xEnd as Integer}, ${4:yEnd as Integer}, ${5:rgba as Integer})"},
    {"trigger": "DrawObject()\tMethod - as Boolean", "contents": "DrawObject(${1:x as Integer}, ${2:y as Integer}, ${3:src as Object}${4: [, rgba as Integer]})"},
    {"trigger": "DrawScaledObject()\tMethod - as Boolean", "contents": "DrawScaledObject(${1:x as Integer}, ${2:y as Integer}, ${3:scaleX as Float}, ${4:scaleY as Float}, ${5:src as Object}${6: [, rgba as Integer]})"},
    {"trigger": "DrawRotatedObject()\tMethod - as Boolean", "contents": "DrawRotatedObject(${1:x as Integer}, ${2:y as Integer}, ${3:theta as Float}, ${4:src as Object}${5: [, rgba as Integer]})"},
    {"trigger": "DrawText()\tMethod - as Boolean", "contents": "DrawText(${1:text as String}, ${2:x as Integer}, ${3:y as Integer}, ${4:rgba as Integer}, ${5:font as Object})"},
    {"trigger": "Finish()\tMethod - as Void", "contents": "Finish()"},

    // ifSetMessagePort Methods
    {"trigger": "SetMessagePort()\tifSetMessagePort - as Void", "contents": "SetMessagePort(${1:port as Object})"},
    
    // ifGetMessagePort Methods
    {"trigger": "GetMessagePort()\tifGetMessagePort - as Object", "contents": "GetMessagePort()"},
    
    // Advanced Snippits
    { "trigger": "Function\tCreate New Function", "contents": "Function ${1:newFunction} (${2})\n\t${3:}\nEnd Function" },
    { "trigger": "If\tIf Statement", "contents": "If ${1}\n\t${2}\nEnd If" },
    { "trigger": "Else If", "contents": "Else If ${1}\n\t${2}" },
    { "trigger": "CreateObject", "contents": "CreateObject(\"${1}\")" }

    ]
}