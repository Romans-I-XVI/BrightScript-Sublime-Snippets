{
    "scope": "source.brightscript",

    "completions":
    [

    // key words
    {"trigger": "and\tkeyword", "contents": "and"},
    {"trigger": "as\tkeyword", "contents": "as"},
    {"trigger": "False\tkeyword", "contents": "False"},
    {"trigger": "for\tkeyword", "contents": "for"},
    {"trigger": "in\tkeyword", "contents": "in"},
    {"trigger": "Invalid\tkeyword", "contents": "Invalid"},
    {"trigger": "not\tkeyword", "contents": "not"},
    {"trigger": "or\tkeyword", "contents": "or"},
    {"trigger": "print\tkeyword", "contents": "print"},
    {"trigger": "return\tkeyword", "contents": "return"},
    {"trigger": "True\tkeyword", "contents": "True"},
    {"trigger": "while\tkeyword", "contents": "while"},


    // Brightscript Components
    {"trigger": "roAppInfo\tComponent", "contents": "roAppInfo"},
    {"trigger": "roAppManager\tComponent", "contents": "roAppManager"},
    {"trigger": "roArray\tComponent", "contents": "roArray"},
    {"trigger": "roAssociativeArray\tComponent", "contents": "roAssociativeArray"},
    {"trigger": "roAudioMetadata\tComponent", "contents": "roAudioMetadata"},
    {"trigger": "roAudioPlayer\tComponent", "contents": "roAudioPlayer"},
    {"trigger": "roAudioResource\tComponent", "contents": "roAudioResource"},
    {"trigger": "roBitmap\tComponent", "contents": "roBitmap"},
    {"trigger": "roBoolean\tComponent", "contents": "roBoolean"},
    {"trigger": "roByteArray\tComponent", "contents": "roByteArray"},
    {"trigger": "roCaptionRenderer\tComponent", "contents": "roCaptionRenderer"},
    {"trigger": "roChannelStore\tComponent", "contents": "roChannelStore"},
    {"trigger": "roCodeRegistrationScreen\tComponent", "contents": "roCodeRegistrationScreen"},
    {"trigger": "roCompositor\tComponent", "contents": "roCompositor"},
    {"trigger": "roDataGramSocket\tComponent", "contents": "roDataGramSocket"},
    {"trigger": "roDateTime\tComponent", "contents": "roDateTime"},
    {"trigger": "roDeviceInfo\tComponent", "contents": "roDeviceInfo"},
    {"trigger": "roEVPCipher\tComponent", "contents": "roEVPCipher"},
    {"trigger": "roEVPDigest\tComponent", "contents": "roEVPDigest"},
    {"trigger": "roFileSystem\tComponent", "contents": "roFileSystem"},
    {"trigger": "roFloat\tComponent", "contents": "roFloat"},
    {"trigger": "roFont\tComponent", "contents": "roFont"},
    {"trigger": "roFontRegistry\tComponent", "contents": "roFontRegistry"},
    {"trigger": "roFunction\tComponent", "contents": "roFunction"},
    {"trigger": "roGridScreen\tComponent", "contents": "roGridScreen"},
    {"trigger": "roHMAC\tComponent", "contents": "roHMAC"},
    {"trigger": "roImageCanvas\tComponent", "contents": "roImageCanvas"},
    {"trigger": "roImageMetadata\tComponent", "contents": "roImageMetadata"},
    {"trigger": "roInt\tComponent", "contents": "roInt"},
    {"trigger": "roInvalid\tComponent", "contents": "roInvalid"},
    {"trigger": "roKeyboardScreen\tComponent", "contents": "roKeyboardScreen"},
    {"trigger": "roList\tComponent", "contents": "roList"},
    {"trigger": "roListScreen\tComponent", "contents": "roListScreen"},
    {"trigger": "roLocalization\tComponent", "contents": "roLocalization"},
    {"trigger": "roMessageDialog\tComponent", "contents": "roMessageDialog"},
    {"trigger": "roMessagePort\tComponent", "contents": "roMessagePort"},
    {"trigger": "roOneLineDialog\tComponent", "contents": "roOneLineDialog"},
    {"trigger": "roParagraphScreen\tComponent", "contents": "roParagraphScreen"},
    {"trigger": "roPath\tComponent", "contents": "roPath"},
    {"trigger": "roPinEntryDialog\tComponent", "contents": "roPinEntryDialog"},
    {"trigger": "roPosterScreen\tComponent", "contents": "roPosterScreen"},
    {"trigger": "roRegex\tComponent", "contents": "roRegex"},
    {"trigger": "roRegion\tComponent", "contents": "roRegion"},
    {"trigger": "roRegistry\tComponent", "contents": "roRegistry"},
    {"trigger": "roRegistrySection\tComponent", "contents": "roRegistrySection"},
    {"trigger": "roRSA\tComponent", "contents": "roRSA"},
    {"trigger": "roScreen\tComponent", "contents": "roScreen"},
    {"trigger": "roSearchHistory\tComponent", "contents": "roSearchHistory"},
    {"trigger": "roSearchScreen\tComponent", "contents": "roSearchScreen"},
    {"trigger": "roSlideShow\tComponent", "contents": "roSlideShow"},
    {"trigger": "roSocketAddress\tComponent", "contents": "roSocketAddress"},
    {"trigger": "roSpringboardScreen\tComponent", "contents": "roSpringboardScreen"},
    {"trigger": "roSprite\tComponent", "contents": "roSprite"},
    {"trigger": "roStreamSocket\tComponent", "contents": "roStreamSocket"},
    {"trigger": "roString\tComponent", "contents": "roString"},
    {"trigger": "roSystemLog\tComponent", "contents": "roSystemLog"},
    {"trigger": "roTextScreen\tComponent", "contents": "roTextScreen"},
    {"trigger": "roTextureManager\tComponent", "contents": "roTextureManager"},
    {"trigger": "roTextureRequest\tComponent", "contents": "roTextureRequest"},
    {"trigger": "roTimespan\tComponent", "contents": "roTimespan"},
    {"trigger": "roUrlTransfer\tComponent", "contents": "roUrlTransfer"},
    {"trigger": "roVideoPlayer\tComponent", "contents": "roVideoPlayer"},
    {"trigger": "roVideoScreen\tComponent", "contents": "roVideoScreen"},
    {"trigger": "roXMLElement\tComponent", "contents": "roXMLElement"},
    {"trigger": "roXMLList \tComponent", "contents": "roXMLList "},

    //ifAppInfo Methods
    {"trigger": "GetID()\tifAppInfo - as String", "contents": "GetID()"},
    {"trigger": "IsDev()\tifAppInfo - as Boolean", "contents": "IsDev()"},
    {"trigger": "GetVersion()\tifAppInfo - as String", "contents": "GetVersion()"},
    {"trigger": "GetTitle()\tifAppInfo - as String", "contents": "GetTitle()"},
    {"trigger": "GetSubtitle()\tifAppInfo - as String", "contents": "GetSubtitle()"},
    {"trigger": "GetDevID()\tifAppInfo - as String", "contents": "GetDevID()"},
    {"trigger": "GetValue()\tifAppInfo - as String", "contents": "GetValue(${1:key as String})"},

    // ifAppManager Methods
    {"trigger": "SetTheme()\tifAppManager - as Void", "contents": "SetTheme(${1:attributeArray as Object})"},
    {"trigger": "SetThemeAttribute()\tifAppManager - as Void", "contents": "SetThemeAttribute(${1:attributeName as String}, ${2:attributeValue as String})"},
    {"trigger": "ClearThemeAttribute()\tifAppManager - as Void", "contents": "ClearThemeAttribute(${1:attributeName as String})"},
    {"trigger": "GetUpTime()\tifAppManager - as Object", "contents": "GetUpTime()"},

    // ifArray Methods
    {"trigger": "Peek()\tifArray - as Dynamic", "contents": "Peek()"},
    {"trigger": "Pop()\tifArray - as Dynamic", "contents": "Pop()"},
    {"trigger": "Push()\tifArray - as Void", "contents": "Push(${1:tvalue as Dynamic})"},
    {"trigger": "Shift()\tifArray - as Dynamic", "contents": "Shift()"},
    {"trigger": "Unshift()\tifArray - as Void", "contents": "Unshift(${1:tvalue as Dynamic})"},
    {"trigger": "Delete()\tifArray - as Boolean", "contents": "Delete(${1:index as Integer})"},
    {"trigger": "Count()\tifArray - as Integer", "contents": "Count()"},
    {"trigger": "Clear()\tifArray - as Void", "contents": "Clear()"},
    {"trigger": "Append()\tifArray - as Void", "contents": "Append(${1:array as Object})"},
    {"trigger": "GetEntry()\tifArray - as Dynamic", "contents": "GetEntry(${1:index as Integer})"},
    {"trigger": "SetEntry()\tifArray - as Void", "contents": "SetEntry(${1:index as Integer}, ${2:tvalue as Dynamic})"},

    // ifAssociativeArray Methods
    {"trigger": "AddReplace()\tifAssociativeArray - as Void", "contents": "AddReplace(${1:key as String}, ${2:value as Dynamic})"},
    {"trigger": "Lookup()\tifAssociativeArray - as Dynamic", "contents": "Lookup(${1:key as String})"},
    {"trigger": "DoesExist()\tifAssociativeArray - as Boolean", "contents": "DoesExist(${1:key as String})"},
    {"trigger": "Delete()\tifAssociativeArray - as Boolean", "contents": "Delete(${1:key as String})"},
    {"trigger": "Clear()\tifAssociativeArray - as Void", "contents": "Clear()"},
    {"trigger": "SetModeCaseSensitive()\tifAssociativeArray - as Void", "contents": "SetModeCaseSensitive()"},
    {"trigger": "LookupCI()\tifAssociativeArray - as Dynamic", "contents": "LookupCI(${1:key as String})"},
    {"trigger": "Append()\tifAssociativeArray - as Void", "contents": "Append(${1:aa as Object})"},
    {"trigger": "Count()\tifAssociativeArray - as Integer", "contents": "Count()"},

    // ifAudioMetadata Methods
    {"trigger": "SetUrl()\tifAudioMetadata - as Void", "contents": "SetUrl(${1:url as String})"},
    {"trigger": "GetTags()\tifAudioMetadata - as Object", "contents": "GetTags()"},
    {"trigger": "GetAudioProperties()\tifAudioMetadata - as Object", "contents": "GetAudioProperties()"},
    {"trigger": "GetCoverArt()\tifAudioMetadata - as Object", "contents": "GetCoverArt()"},

    // ifAudioPlayer Methods
    {"trigger": "SetContentList()\tifAudioPlayer - as Void", "contents": "SetContentList(${1:contentList as Object})"},
    {"trigger": "AddContent()\tifAudioMetadata - as Void", "contents": "AddContent(${1:contentItem as Object})"},
    {"trigger": "ClearContent()\tifAudioMetadata - as Void", "contents": "ClearContent()"},
    {"trigger": "Play()\tifAudioMetadata - as Boolean", "contents": "Play()"},
    {"trigger": "Stop()\tifAudioMetadata - as Boolean", "contents": "Stop()"},
    {"trigger": "Pause()\tifAudioMetadata - as Boolean", "contents": "Pause()"},
    {"trigger": "Resume()\tifAudioMetadata - as Boolean", "contents": "Resume()"},
    {"trigger": "SetLoop()\tifAudioMetadata - as Void", "contents": "SetLoop(${1:enable as Boolean})"},
    {"trigger": "SetNext()\tifAudioMetadata - as Void", "contents": "SetNext(${1:item as Integer})"},
    {"trigger": "Seek()\tifAudioMetadata - as Boolean", "contents": "Seek(${1:offsetMs as Integer})"},
    {"trigger": "SetTimeMetaDataForKeys()\tifAudioMetadata - as Void", "contents": "SetTimeMetaDataForKeys(${1:keys as Dynamic})"},

    // ifAudioResource Methods
    {"trigger": "Trigger()\tifAudioResource - as Void", "contents": "Trigger(${1:volume as Integer})"},
    {"trigger": "IsPlaying()\tifAudioResource - as Boolean", "contents": "IsPlaying()"},
    {"trigger": "Stop()\tifAudioResource - as Void", "contents": "Stop()"},
    {"trigger": "MaxSimulStreams()\tifAudioResource - as Integer", "contents": "MaxSimulStreams()"},
    {"trigger": "GetMetaData()\tifAudioResource - as Object", "contents": "GetMetaData()"},

    // ifBytArray Methods
    {"trigger": "WriteFile()\tifByteArray - as Boolean", "contents": "WriteFile(${1:path as String}${2:, [start_index as Integer]}${3:, [length as Integer]})"},
    {"trigger": "ReadFile()\tifByteArray - as Boolean", "contents": "ReadFile(${1:path as String}${2:, [start_pos as Integer]}${3:, [length as Integer]})"},
    {"trigger": "AppendFile()\tifByteArray - as Boolean", "contents": "AppendFile(${1:path as String})"},
    {"trigger": "SetResize()\tifByteArray - as Boolean", "contents": "SetResize(${1:min_size as Integer}, ${2:auto_resize as Boolean})"},
    {"trigger": "ToHexString()\tifByteArray - as String", "contents": "ToHexString()"},
    {"trigger": "FromHexString()\tifByteArray - as Void", "contents": "FromHexString(${1:hexstring as String})"},
    {"trigger": "ToBase64String()\tifByteArray - as String", "contents": "ToBase64String()"},
    {"trigger": "FromBase64String()\tifByteArray - as Void", "contents": "FromBase64String(${1:s as String})"},
    {"trigger": "ToAsciiString()\tifByteArray - as String", "contents": "ToAsciiString()"},
    {"trigger": "FromAsciiString()\tifByteArray", "contents": "FromAsciiString(${1:s as String})"},
    {"trigger": "GetSignedByte()\tifByteArray - as Integer", "contents": "GetSignedByte(${1:index as Integer})"},
    {"trigger": "GetSignedLong()\tifByteArray - as Integer", "contents": "GetSignedLong(${1:index as Integer})"},
    {"trigger": "IsLittleEndianCPU()\tifByteArray - as Boolean", "contents": "IsLittleEndianCPU()"},

    // ifCaptionRenderer Methods 
    {"trigger": "SetMode()\tifCaptionRenderer - as Void", "contents": "SetMode(${1:mode as Integer})"},
    {"trigger": "SetScreen()\tifCaptionRenderer - as Void", "contents": "SetScreen(${1:screen as Object})"},
    {"trigger": "SetMessagePort()\tifCaptionRenderer - as Void", "contents": "SetMessagePort(${1:port as Object})"},
    {"trigger": "ShowSubtitle()\tifCaptionRenderer - as Void", "contents": "ShowSubtitle(${1:enable as Boolean})"},
    {"trigger": "UpdateCaption()\tifCaptionRenderer - as Void", "contents": "UpdateCaption()"},
    {"trigger": "GetSubtitleTracks()\tifCaptionRenderer - as Object", "contents": "GetSubtitleTracks()"},
    {"trigger": "ChangeSubtitleTrack()\tifCaptionRenderer - as Void", "contents": "ChangeSubtitleTrack(${1:track as String})"},

    // ifChannelStore Methods
    {"trigger": "GetCatalog()\tifChannelStore - as Void", "contents": "GetCatalog()"},
    {"trigger": "GetStoreCatalog()\tifChannelStore - as Void", "contents": "GetStoreCatalog()"},
    {"trigger": "GetPurchases()\tifChannelStore - as Void", "contents": "GetPurchases()"},
    {"trigger": "GetUpgrade()\tifChannelStore - as Void", "contents": "GetUpgrade()"},
    {"trigger": "SetOrder()\tifChannelStore - as Void", "contents": "SetOrder(${1:order as Object})"},
    {"trigger": "ClearOrder()\tifChannelStore - as Void", "contents": "ClearOrder()"},
    {"trigger": "DeltaOrder()\tifChannelStore - as Integer", "contents": "DeltaOrder(${1:code as Object}, ${2:qty as Integer})"},
    {"trigger": "GetOrder()\tifChannelStore - as Objcet", "contents": "GetOrder()"},
    {"trigger": "DoOrder()\tifChannelStore - as Boolean", "contents": "DoOrder()"},
    {"trigger": "DoUpgrade()\tifChannelStore - as String", "contents": "DoUpgrade()"},
    {"trigger": "FakeServer()\tifChannelStore - as Void", "contents": "FakeServer(${1:enable as Boolean})"},
    {"trigger": "GetUserData()\tifChannelStore - as Object", "contents": "GetUserData()"},
    {"trigger": "GetPartialUserData()\tifChannelStore - as Object", "contents": "GetPartialUserData(${1:properties as String})"},

    // ifCodeRegistrationScreen Methods
    {"trigger": "SetTitle()\tifCodeRegistrationScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "AddHeaderText()\tifCodeRegistrationScreen - as Void", "contents": "AddHeaderText(${1:text as String})"},
    {"trigger": "AddParagraph()\tifCodeRegistrationScreen - as Void", "contents": "AddParagraph(${1:text as String})"},
    {"trigger": "AddButton()\tifCodeRegistrationScreen - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddFocalText()\tifCodeRegistrationScreen - as Void", "contents": "AddFocalText(${1:text as String}, ${2:spacingFormat as String})"},
    {"trigger": "SetBreadcrumbText()\tifCodeRegistrationScreen - as Void", "contents": "SetBreadcrumbText(${1:text_1 as String}, ${2:text_2 as String})"},
    {"trigger": "SetRegistrationCode()\tifCodeRegistrationScreen - as Void", "contents": "SetRegistrationCode(${1:regCode as String})"},
    
    // ifCompositor Methods
    {"trigger": "SetDrawTo()\tifCompositor - as Void", "contents": "SetDrawTo(${1:destBitmap as Object}, ${2:rgbaBackground as Integer})"},
    {"trigger": "Draw()\tifCompositor - as Void", "contents": "Draw()"},
    {"trigger": "DrawAll()\tifCompositor - as Void", "contents": "DrawAll()"},
    {"trigger": "NewSprite()\tifCompositor - as Object", "contents": "NewSprite(${1:x as Integer}, ${2:y as Integer}, ${3:region as Object}, ${4:z as Integer})"},
    {"trigger": "NewAnimatedSprite()\tifCompositor - as Object", "contents": "NewAnimatedSprite(${1:x as Integer}, ${2:y as Integer}, ${3:regionArray as Object}, ${4:z as Integer})"},
    {"trigger": "AnimationTick()\tifCompositor - as Void", "contents": "AnimationTick(${1:duration as Integer})"},
    {"trigger": "ChangeMatchingRegions()\tifCompositor - as Void", "contents": "ChangeMatchingRegions(${1:oldRegion as Object}, ${2:newRegion as Object})"},

    // ifDateTime Methods
    {"trigger": "Mark()\tifDateTime - as Void", "contents": "Mark()"},
    {"trigger": "ToLocalTime()\tifDateTime - as Void", "contents": "ToLocalTime()"},
    {"trigger": "GetTimeZoneOffset()\tifDateTime - as Integer", "contents": "GetTimeZoneOffset()"},
    {"trigger": "AsSeconds()\tifDateTime - as Integer", "contents": "AsSeconds()"},
    {"trigger": "FromSeconds()\tifDateTime - as Void", "contents": "FromSeconds(${1:numSeconds as Integer})"},
    {"trigger": "ToISOString()\tifDateTime - as String", "contents": "ToISOString()"},
    {"trigger": "FromISO8601String()\tifDateTime - as Void", "contents": "FromISO8601String(${1:dateString as String})"},
    {"trigger": "AsDateString()\tifDateTime - as String", "contents": "AsDateString(${1:format as String})"},
    {"trigger": "AsDateStringNoParam()\tifDateTime - as String", "contents": "AsDateStringNoParam()"},
    {"trigger": "GetWeekday()\tifDateTime - as String", "contents": "GetWeekday()"},
    {"trigger": "GetYear()\tifDateTime - as Integer", "contents": "GetYear()"},
    {"trigger": "GetMonth()\tifDateTime - as Integer", "contents": "GetMonth()"},
    {"trigger": "GetDayOfMonth()\tifDateTime - as Integer", "contents": "GetDayOfMonth()"},
    {"trigger": "GetHours()\tifDateTime - as Integer", "contents": "GetHours()"},
    {"trigger": "GetMinutes()\tifDateTime - as Integer", "contents": "GetMinutes()"},
    {"trigger": "GetSeconds()\tifDateTime - as Integer", "contents": "GetSeconds()"},
    {"trigger": "GetMilliseconds()\tifDateTime - as Integer", "contents": "GetMilliseconds()"},
    {"trigger": "GetLastDayOfMonth()\tifDateTime - as Integer", "contents": "GetLastDayOfMonth()"},
    {"trigger": "GetDayOfWeek()\tifDateTime - as Integer", "contents": "GetDayOfWeek()"},

    // ifDeviceInfo Methods
    {"trigger": "GetModel()\tifDeviceInfo - as String", "contents": "GetModel()"},
    {"trigger": "GetModelDetails()\tifDeviceInfo - as Object", "contents": "GetModelDetails()"},
    {"trigger": "GetVersion()\tifDeviceInfo - as String", "contents": "GetVersion()"},
    {"trigger": "GetDeviceUniqueId()\tifDeviceInfo - as String", "contents": "GetDeviceUniqueId()"},
    {"trigger": "GetFriendlyName()\tifDeviceInfo - as String", "contents": "GetFriendlyName()"},
    {"trigger": "GetAdvertisingId()\tifDeviceInfo - as String", "contents": "GetAdvertisingId()"},
    {"trigger": "IsAdIdTrackingDisabled()\tifDeviceInfo - as Boolean", "contents": "IsAdIdTrackingDisabled()"},
    {"trigger": "GetPublisherId()\tifDeviceInfo - as String", "contents": "GetPublisherId()"},
    {"trigger": "GetRandomUUID()\tifDeviceInfo - as String", "contents": "GetRandomUUID()"},
    {"trigger": "GetDisplayType()\tifDeviceInfo - as String", "contents": "GetDisplayType()"},
    {"trigger": "GetDisplayMode()\tifDeviceInfo - as String", "contents": "GetDisplayMode()"},
    {"trigger": "GetDisplayAspectRation()\tifDeviceInfo - as String", "contents": "GetDisplayAspectRation()"},
    {"trigger": "GetDisplaySize()\tifDeviceInfo - as Object", "contents": "GetDisplaySize()"},
    {"trigger": "GetTimeZone()\tifDeviceInfo - as String", "contents": "GetTimeZone()"},
    {"trigger": "HasFeature()\tifDeviceInfo - as Boolean", "contents": "HasFeature(${1:feature as String})"},
    {"trigger": "GetIPAddrs()\tifDeviceInfo - as Object", "contents": "GetIPAddrs()"},
    {"trigger": "GetCurrentLocale()\tifDeviceInfo - as String", "contents": "GetCurrentLocale()"},
    {"trigger": "GetCountryCode()\tifDeviceInfo - as String", "contents": "GetCountryCode()"},
    {"trigger": "TimeSinceLastKeypress()\tifDeviceInfo - as Integer", "contents": "TimeSinceLastKeypress()"}, 
    {"trigger": "GetVideoMode()\tifDeviceInfo - as String", "contents": "GetVideoMode()"},
    {"trigger": "IsHDMIConnected()\tifDeviceInfo - as Boolean", "contents": "IsHDMIConnected()"},
    {"trigger": "GetAudioOutputChannel()\tifDeviceInfo - as String", "contents": "GetAudioOutputChannel()"},
    {"trigger": "GetModelDisplayName()\tifDeviceInfo - as String", "contents": "GetModelDisplayName()"},
    {"trigger": "GetLinkStatus()\tifDeviceInfo - as Boolean", "contents": "GetLinkStatus()"},
    {"trigger": "EnableLinkStatusEvent()\tifDeviceInfo - as Boolean", "contents": "EnableLinkStatusEvent(${1:enable as Boolean})"},
    {"trigger": "GetCaptionsMode()\tifDeviceInfo - as String", "contents": "GetCaptionsMode()"},
    {"trigger": "GetCaptionsOption()\tifDeviceInfo - as String", "contents": "GetCaptionsOption(${1:option as String})"}, 
    {"trigger": "GetConnectionType()\tifDeviceInfo - as String", "contents": "GetConnectionType()"},
    {"trigger": "GetConnectionInfo()\tifDeviceInfo - as Object", "contents": "GetConnectionInfo()"},
    {"trigger": "GetAudioDecodeInfo()\tifDeviceInfo - as Object", "contents": "GetAudioDecodeInfo()"},
    {"trigger": "GetVideoDecodeInfo()\tifDeviceInfo - as Object", "contents": "GetVideoDecodeInfo()"},

    // ifEVPCipher Methods
    {"trigger": "Setup()\tifEVPCipher - as Integer", "contents": "Setup(${1:encrypt as Boolean}, ${2:format as String}, ${3:key as String}, ${4:iv as String}, ${5:padding as Integer})"},
    {"trigger": "Reinit()\tifEVPCipher - as Integer", "contents": "Reinit()"},
    {"trigger": "Process()\tifEVPCipher - as Object", "contents": "Process(${1:bytes as Object})"},
    {"trigger": "Update()\tifEVPCipher - as Object", "contents": "Update(${1:bytes as Object})"},
    {"trigger": "Final()\tifEVPCipher - as Object", "contents": "Final()"},

    // ifEVPDigest Methods
    {"trigger": "Setup()\tifEVPDigest - as Integer", "contents": "Setup(${1:digestType as String})"},
    {"trigger": "Reint()\tifEVPDigest - as Integer", "contents": "Reint()"},
    {"trigger": "Process()\tifEVPDigest - as Object", "contents": "Process(${1:bytes as Object})"},
    {"trigger": "Update()\tifEVPDigest - as Object", "contents": "Update(${1:bytes as Object})"},
    {"trigger": "Final()\tifEVPDigest - as Object", "contents": "Final()"},

    // ifFileSystem Methods
    {"trigger": "GetVolumeList()\tifFileSystem - as Object", "contents": "GetVolumeList()"},
    {"trigger": "GetDirectoryListing()\tifFileSystem - as Object", "contents": "GetDirectoryListing(${1:dirPath as String})"},
    {"trigger": "Find()\tifFileSystem - as Object", "contents": "Find(${1:dirPath as String}, ${2:regEx as String})"},
    {"trigger": "Match()\tifFileSystem - as Object", "contents": "Match(${1:path as String}, ${2:pattern as String})"},
    {"trigger": "Exists()\tifFileSystem - as Boolean", "contents": "Exists(${1:path as String})"},
    {"trigger": "Stat()\tifFileSystem - as Object", "contents": "Stat(${1:path as String})"},
    {"trigger": "GetVolumeInfo()\tifFileSystem - as Object", "contents": "GetVolumeInfo(${1:path as String})"},
    {"trigger": "CreateDirectory()\tifFileSystem - as Boolean", "contents": "CreateDirectory(${1:path as String})"},
    {"trigger": "Delete()\tifFileSystem - as Boolean", "contents": "Delete(${1:path as String})"},
    {"trigger": "CopyFile()\tifFileSystem - as Boolean", "contents": "CopyFile(${1:fromPath as String}, ${2:toPath as String})"},
    {"trigger": "Rename()\tifFileSystem - as Boolean", "contents": "Rename(${1:fromPath as String}, ${2:toPath as String})"},

    // ifFont Methods
    {"trigger": "GetOneLineHeight()\tifFont - as Integer", "contents": "GetOneLineHeight()"},
    {"trigger": "GetOneLineWidth()\tifFont - as Integer", "contents": "GetOneLineWidth(${1:text as String}, ${2:MaxWidth as Integer})"},

    // ifFontRegistry Methods
    {"trigger": "Register()\tifFontRegistry - as Boolean", "contents": "Register(${1:path as String})"},
    {"trigger": "GetFamilies()\tifFontRegistry - as Object", "contents": "GetFamilies()"},
    {"trigger": "GetFont()\tifFontRegistry - as Object", "contents": "GetFont(${1:family as String}, ${2:size as Integer}, ${3:bold as Boolean}, ${4:italic as Boolean})"},
    {"trigger": "GetDefaultFont()\tifFontRegistry - as Object", "contents": "GetDefaultFont(${1:size as Integer}, ${2:bold as Boolean}, ${3:italic as Boolean})"},
    {"trigger": "GetDefaultFont()\tifFontRegistry - as Object", "contents": "GetDefaultFont()"},
    {"trigger": "GetDefaultFontSize()\tifFontRegistry - as Integer", "contents": "GetDefaultFontSize()"},
    {"trigger": "Get()\tifFontRegistry - as String", "contents": "Get(${1:family as String}, ${2:size as Integer}, ${3:bold as Boolean}, ${4:italic as Boolean})"},

    // ifGridScreen Methods
    {"trigger": "SetupLists()\tifGridScreen - as Void", "contents": "SetupLists(${1:count as Integer})"},
    {"trigger": "SetListNames()\tifGridScreen - as Void", "contents": "SetListNames(${1:names as Object})"},
    {"trigger": "SetListName()\tifGridScreen - as Void", "contents": "SetListName(${1:rowIndex as Integer}, ${2:name as String})"},
    {"trigger": "SetContentList()\tifGridScreen - as Void", "contents": "SetContentList(${1:rowIndex as Integer}, ${2:contentList as Object})"},
    {"trigger": "SetContentListSubset()\tifGridScreen - as Void", "contents": "SetContentListSubset(${1:rowIndex as Integer}, ${2:contentList as Object}, ${3:offset as Integer}, ${4:length as Integer})"},
    {"trigger": "SetListOffset()\tifGridScreen - as Void", "contents": "SetListOffset(${1:rowIndex as Integer}, ${2:itemIndex as Integer})"},
    {"trigger": "SetListVisible()\tifGridScreen - as Void", "contents": "SetListVisible(${1:rowIndex as Integer}, ${2:visible as Boolean})"},
    {"trigger": "SetFocusedListItem()\tifGridScreen - as Void", "contents": "SetFocusedListItem(${1:rowIndex as Integer}, ${2:itemIndex as Integer})"},
    {"trigger": "SetDisplayMode()\tifGridScreen - as Void", "contents": "SetDisplayMode(${1:displayMode as String})"},
    {"trigger": "ShowMessage()\tifGridScreen - as Void", "contents": "ShowMessage(${1:message as String})"},
    {"trigger": "ClearMessage()\tifGridScreen - as Void", "contents": "ClearMessage()"},
    {"trigger": "SetGridStyle()\tifGridScreen - as Void", "contents": "SetGridStyle(${1:style as String})"},
    {"trigger": "SetListPosterStyles()\tifGridScreen - as Void", "contents": "SetListPosterStyles(${1:styles as Object})"},
    {"trigger": "SetBreadcrumbEnabled()\tifGridScreen - as Void", "contents": "SetBreadcrumbEnabled(${1:enabled as Boolean})"},
    {"trigger": "SetBreadcrumbText()\tifGridScreen - as Void", "contents": "SetBreadcrumbText(${1:text_1 as String}, ${2:text_2 as String})"},
    {"trigger": "SetUpBehaviorAtTopRow()\tifGridScreen - as Void", "contents": "SetUpBehaviorAtTopRow(${1:behavior as String})"},
    {"trigger": "SetLoadingPoster()\tifGridScreen - as Void", "contents": "SetLoadingPoster(${1:sdPosterUrl as String}, ${2:hdPosterUrl as String})"},
    {"trigger": "SetErrorPoster()\tifGridScreen - as Void", "contents": "SetErrorPoster(${1:sdPosterUrl as String}, ${2:hdPosterUrl as String})"},
    {"trigger": "SetCounterVisible()\tifGridScreen - as Void", "contents": "SetCounterVisible(${1:visible as Boolean})"},
    {"trigger": "SetDescriptionVisible()\tifGridScreen - as Void", "contents": "SetDescriptionVisible(${1:visible as Boolean})"},
    {"trigger": "SetFocusRingVisible()\tifGridScreen - as Void", "contents": "SetFocusRingVisible(${1:visible as roBoolean})"},

    // ifHMAC Methods
    {"trigger": "Setup()\tifHMAC - as Integer", "contents": "Setup(${1:digestType as String})"},
    {"trigger": "Reint()\tifHMAC - as Integer", "contents": "Reint()"},
    {"trigger": "Process()\tifHMAC - as Object", "contents": "Process(${1:message as Object})"},
    {"trigger": "Update()\tifHMAC - as Void", "contents": "Update(${1:partialMessage as Object})"},
    {"trigger": "Final()\tifHMAC - as Object", "contents": "Final()"},

    // ifHttpAgent Methods
    {"trigger": "AddHeader()\tifHttpAgent - as Boolean", "contents": "AddHeader(${1:name as String}, ${2:value as String})"},
    {"trigger": "SetHeaders()\tifHttpAgent - as Boolean", "contents": "SetHeaders(${1:nameValueMap as Object})"},
    {"trigger": "InitClientCertificates()\tifHttpAgent - as Boolean", "contents": "InitClientCertificates()"},
    {"trigger": "SetCertificatesFile()\tifHttpAgent - as Boolean", "contents": "SetCertificatesFile(${1:path as String})"},
    {"trigger": "SetCertificatesDepth()\tifHttpAgent - as Void", "contents": "SetCertificatesDepth(${1:depth as Integer})"},
    {"trigger": "EnableCookies()\tifHttpAgent - as Void", "contents": "EnableCookies()"},
    {"trigger": "GetCookies()\tifHttpAgent - as Object", "contents": "GetCookies(${1:domain as String}, ${2:path as String})"},
    {"trigger": "AddCookies()\tifHttpAgent - as Boolean", "contents": "AddCookies(${1:cookies as Object})"},
    {"trigger": "ClearCookies()\tifHttpAgent - as Void", "contents": "ClearCookies()"},

    // ifImageCanvas Methods
    {"trigger": "AllowUpdates()\tifImageCanvas - as Void", "contents": "AllowUpdates(${1:updatesEnabled as Boolean})"},
    {"trigger": "SetLayer()\tifImageCanvas - as Void", "contents": "SetLayer(${1:zOrder as Integer}, ${2:contentMetaData as Object})"},
    {"trigger": "SetLayer()\tifImageCanvas - as Void", "contents": "SetLayer(${1:zOrder as Integer}, ${2:contentList as Object})"},
    {"trigger": "SwapLayers()\tifImageCanvas - as Void", "contents": "SwapLayers(${1:zOrderA as Integer}, ${2:zOrderB as Integer})"},
    {"trigger": "SetRequireAllImagesToDraw()\tifImageCanvas - as Void", "contents": "SetRequireAllImagesToDraw(${1:requireAllImages as Boolean})"},
    {"trigger": "PurgeCachedImages()\tifImageCanvas - as Void", "contents": "PurgeCachedImages()"},
    {"trigger": "GetCanvasRect()\tifImageCanvas - as Object", "contents": "GetCanvasRect()"},
    {"trigger": "ClearLayer()\tifImageCanvas - as Void", "contents": "ClearLayer(${1:zOrder as Integer})"},
    {"trigger": "Clear()\tifImageCanvas - as Void", "contents": "Clear()"},
    {"trigger": "AddButton()\tifImageCanvas - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "ClearButtons()\tifImageCanvas - as Void", "contents": "ClearButtons()"},

    // ifImageMetadata Methods
    {"trigger": "SetUrl()\tifImageMetadata - as Void", "contents": "SetUrl(${1:url as String})"},
    {"trigger": "GetMetaData()\tifImageMetadata - as Object", "contents": "GetMetaData()"},
    {"trigger": "GetThumbnail()\tifImageMetadata - as Object", "contents": "GetThumbnail()"},
    {"trigger": "GetRawExif()\tifImageMetadata - as Object", "contents": "GetRawExif()"},
    {"trigger": "GetRawExifTag()\tifImageMetadata - as Dynamic", "contents": "GetRawExifTag(${1:ifd as Integer}, ${2:tag as Integer})"},

    // ifIntOps Methods
    {"trigger": "ToStr()\tifIntOps - as String", "contents": "ToStr()"},

    // ifKeyboardScreen Methods
    {"trigger": "SetTitle()\tifKeyboardScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "SetDisplayText()\tifKeyboardScreen - as Void", "contents": "SetDisplayText(${1:displayText as String})"},
    {"trigger": "SetText()\tifKeyboardScreen - as String", "contents": "SetText(${1:title as String})"},
    {"trigger": "GetText()\tifKeyboardScreen - as String", "contents": "GetText()"},
    {"trigger": "SetMaxLength()\tifKeyboardScreen - as Void", "contents": "SetMaxLength(${1:maxLen as Integer})"},
    {"trigger": "AddButton()\tifKeyboardScreen - as Void", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "ClearButtons()\tifKeyboardScreen - as Void", "contents": "ClearButtons()"},
    {"trigger": "SetSecureText()\tifKeyboardScreen - as Void", "contents": "SetSecureText(${1:isSecure as Boolean})"},

    // ifList Methods
    {"trigger": "ResetIndex()\tifList - as Boolean", "contents": "ResetIndex()"},
    {"trigger": "AddTail()\tifList - as Void", "contents": "AddTail(${1:tval as Dynamic})"},
    {"trigger": "AddHead()\tifList - as Void", "contents": "AddHead(${1:tval as Dynamic})"},
    {"trigger": "RemoveIndex()\tifList - as Dynamic", "contents": "RemoveIndex()"},
    {"trigger": "GetIndex()\tifList - as Dynamic", "contents": "GetIndex()"},
    {"trigger": "RemoveTail()\tifList - as Dynamic", "contents": "RemoveTail()"},
    {"trigger": "RemoveHead()\tifList - as Dynamic", "contents": "RemoveHead()"},
    {"trigger": "GetTail()\tifList - as Dynamic", "contents": "GetTail()"},
    {"trigger": "GetHead()\tifList - as Dynamic", "contents": "GetHead()"},
    {"trigger": "Count()\tifList - as Integer", "contents": "Count()"},
    {"trigger": "Clear()\tifList - as Void", "contents": "Clear()"},

    // ifListScreen Methods
    {"trigger": "SetContent()\tifListScreen - as Void", "contents": "SetContent(${1:contentList as Object})"},
    {"trigger": "AddContent()\tifListScreen - as Void", "contents": "AddContent(${1:item as Object})"},
    {"trigger": "SetItem()\tifListScreen - as Void", "contents": "SetItem(${1:index as Integer}, ${2:item as Object})"},
    {"trigger": "ClearContent()\tifListScreen - as Void", "contents": "ClearContent()"},
    {"trigger": "RemoveContent()\tifListScreen - as Void", "contents": "RemoveContent(${1:index as Integer})"},
    {"trigger": "SetFocusedListItem()\tifListScreen - as Void", "contents": "SetFocusedListItem(${1:index as Integer})"},
    {"trigger": "SetHeader()\tifListScreen - as Void", "contents": "SetHeader(${1:header as String})"},
    {"trigger": "SetTitle()\tifListScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "SetBreadcrumbText()\tifListScreen - as Void", "contents": "SetBreadcrumbText(${1:breadcrumb1 as String}, ${2:breadcrumb2 as String})"},
    {"trigger": "SetUpBehaviorAtTopRow()\tifListScreen - as Void", "contents": "SetUpBehaviorAtTopRow(${1:behavior as String})"},

    // ifLocalization Methods
    {"trigger": "GetPluralString()\tifLocalization - as String", "contents": "GetPluralString(${1:count as Integer}, ${2:zeroString as String}, ${3:oneString as String}, ${4:pluralString as String})"},
    {"trigger": "GetLocalizedAsset()\tifLocalization - as String", "contents": "GetLocalizedAsset(${1:dirName as String}, ${2:fileName as String})"},

    // if MessageDialog Methods
    {"trigger": "SetTitle()\tifMessageDialog - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "SetText()\tifMessageDialog - as Void", "contents": "SetText(${1:text as String})"},
    {"trigger": "UpdateText()\tifMessageDialog - as Void", "contents": "UpdateText(${1:text as String})"},
    {"trigger": "AddStaticText()\tifMessageDialog - as Void", "contents": "AddStaticText(${1:text as String})"},
    {"trigger": "AddButton()\tifMessageDialog - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddLeftButton()\tifMessageDialog - as Boolean", "contents": "AddLeftButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "UpdateButton()\tifMessageDialog - as Boolean", "contents": "UpdateButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddButtonSeparator()\tifMessageDialog - as Boolean", "contents": "AddButtonSeparator()"},
    {"trigger": "AddRatingButton()\tifMessageDialog - as Boolean", "contents": "AddRatingButton(${1:id as Integer}, ${2:userRating as Integer}, ${3:aggregateRating as Integer}, ${4:tip as String})"},
    {"trigger": "AddLeftRatingButton()\tifMessageDialog - as Boolean", "contents": "AddLeftRatingButton(${1:id as Integer}, ${2:userRating as Integer}, ${3:aggregateRating as Integer}, ${4:tip as String})"},
    {"trigger": "ShowBusyAnimation()\tifMessageDialog - as Void", "contents": "ShowBusyAnimation()"},
    {"trigger": "EnableOverlay()\tifMessageDialog - as Void", "contents": "EnableOverlay(${1:enable as Boolean})"},
    {"trigger": "SetMenuTopLeft()\tifMessageDialog - as Void", "contents": "SetMenuTopLeft(${1:topLeft as Boolean})"},
    {"trigger": "SetFocusedMenuItem()\tifMessageDialog - as Boolean", "contents": "SetFocusedMenuItem(${1:item as Integer})"},
    {"trigger": "EnableBackButton()\tifMessageDialog - as Void", "contents": "EnableBackButton(${1:enableBackButton as Boolean})"},

    // ifMessagePort Methods
    {"trigger": "WaitMessage()\tifMessagePort - as Dynamic", "contents": "WaitMessage(${1:timeout as Integer})"},
    {"trigger": "GetMessage()\tifMessagePort - as Dynamic", "contents": "GetMessage()"},
    {"trigger": "PeekMessage()\tifMessagePort - as Dynamic", "contents": "PeekMessage()"},

    // ifOneLineDialog Methods
    {"trigger": "SetTitle()\tifOneLineDialog - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "ShowBusyAnimation()\tifOneLineDialog - as Void", "contents": "ShowBusyAnimation()"},

    // ifParagraphScreen Methods
    {"trigger": "AddHeaderText()\tifParagraphScreen - as Void", "contents": "AddHeaderText(${1:text as String})"},
    {"trigger": "AddParagraph()\tifParagraphScreen - as Void", "contents": "AddParagraph(${1:text as String})"},
    {"trigger": "AddButton()\tifParagraphScreen - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddGraphic()\tifParagraphScreen - as Void", "contents": "AddGraphic(${1:url as String})"},
    {"trigger": "SetTitle()\tifParagraphScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "AddGraphic()\tifParagraphScreen - as Void", "contents": "AddGraphic(${1:url as String}, ${2:displayMode as String})"},
    {"trigger": "SetDefaultMenuItem()\tifParagraphScreen - as Boolean", "contents": "SetDefaultMenuItem(${1:index as Integer})"},

    // ifPath Methods
    {"trigger": "Change()\tifPath - as Boolean", "contents": "Change(${1:path as String})"},
    {"trigger": "IsValid()\tifPath - as Boolean", "contents": "IsValid()"},
    {"trigger": "Split()\tifPath - as Object", "contents": "Split()"},

    // ifPinEntryDialog Methods
    {"trigger": "AddButton()\tifPinEntryDialog - as Void", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "Pin()\tifPinEntryDialog - as String", "contents": "Pin()"},
    {"trigger": "SetNumPinEntryFields()\tifPinEntryDialog - as Void", "contents": "SetNumPinEntryFields(${1:numFields as Integer})"},
    {"trigger": "SetTitle()\tifPinEntryDialog - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "EnableBackButton()\tifPinEntryDialog - as Void", "contents": "EnableBackButton(${1:enableBackButton as Boolean})"},

    // ifPosterScreen Methods
    {"trigger": "SetTitle()\tifPosterScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "SetContentList()\tifPosterScreen - as Void", "contents": "SetContentList(${1:contentList as Object})"},
    {"trigger": "GetContentList()\tifPosterScreen - as Object", "contents": "GetContentList()"},
    {"trigger": "SetListNames()\tifPosterScreen - as Void", "contents": "SetListNames(${1:listNames as Object})"},
    {"trigger": "SetListStyle()\tifPosterScreen - as Void", "contents": "SetListStyle(${1:style as String})"},
    {"trigger": "SetListDisplayMode()\tifPosterScreen - as Void", "contents": "SetListDisplayMode(${1:displayMode as String})"},
    {"trigger": "SetFocusedList()\tifPosterScreen - as Void", "contents": "SetFocusedList(${1:itemIndex as Integer})"},
    {"trigger": "SetFocusedListItem()\tifPosterScreen - as Void", "contents": "SetFocusedListItem(${1:itemIndex as Integer})"},
    {"trigger": "SetBreadcrumbText()\tifPosterScreen - as Void", "contents": "SetBreadcrumbText(${1:breadcrumb1 as String}, ${2:breadcrumb2 as String})"},
    {"trigger": "SetBreadcrumbEnabled()\tifPosterScreen - as Void", "contents": "SetBreadcrumbEnabled(${1:enabled as Boolean})"},
    {"trigger": "ShowMessage()\tifPosterScreen - as Void", "contents": "ShowMessage(${1:message as String})"},
    {"trigger": "ClearMessage()\tifPosterScreen - as Void", "contents": "ClearMessage()"},
    {"trigger": "SetAdURL()\tifPosterScreen - as Void", "contents": "SetAdURL(${1:sdAdURL as String}, ${2:hdAdURL as String})"},
    {"trigger": "SetAdSelectable()\tifPosterScreen - as Void", "contents": "SetAdSelectable(${1:isSelectable as Boolean})"},
    {"trigger": "SetAdDisplayMode()\tifPosterScreen - as Void", "contents": "SetAdDisplayMode(${1:displayMode as String})"},
    {"trigger": "SetFocusToFilterBanner()\tifPosterScreen - as Void", "contents": "SetFocusToFilterBanner(${1:enable as Boolean})"},
    {"trigger": "SetLoadingPosters()\tifPosterScreen - as Void", "contents": "SetLoadingPosters(${1:sdPosterUrl as String}, ${2:hdPosterUrl as String})"},

    // ifRegex Methods
    {"trigger": "IsMatch()\tifRegex - as Boolean", "contents": "IsMatch(${1:str as String})"},
    {"trigger": "Match()\tifRegex - as Object", "contents": "Match(${1:str as String})"},
    {"trigger": "Replace()\tifRegex - as String", "contents": "Replace(${1:str as String}, ${2:replacement as String})"},
    {"trigger": "Split()\tifRegex - as Object", "contents": "Split(${1:str as String})"},

    // ifRegion Methods
    {"trigger": "GetBitmap()\tifRegion - as Object", "contents": "GetBitmap()"},
    {"trigger": "GetX()\tifRegion - as Integer", "contents": "GetX()"},
    {"trigger": "GetY()\tifRegion - as Integer", "contents": "GetY()"},
    {"trigger": "GetWidth()\tifRegion - as Integer", "contents": "GetWidth()"},
    {"trigger": "GetHeight()\tifRegion - as Integer", "contents": "GetHeight()"},
    {"trigger": "Offset()\tifRegion - as Void", "contents": "Offset(${1:x as Integer}, ${2:y as Integer}, ${3:w as Integer}, ${4:h as Integer})"},
    {"trigger": "Set()\tifRegion - as Void", "contents": "Set(${1:srcRegion as Object})"},
    {"trigger": "Copy()\tifRegion - as Object", "contents": "Copy()"},
    {"trigger": "SetWrap()\tifRegion - as Boolean", "contents": "SetWrap(${1:wrap as Boolean})"},
    {"trigger": "GetWrap()\tifRegion - as Boolean", "contents": "GetWrap()"},
    {"trigger": "SetTime()\tifRegion - as Void", "contents": "SetTime(${1:time as Integer})"},
    {"trigger": "GetTime()\tifRegion - as Integer", "contents": "GetTime()"},
    {"trigger": "SetPretranslation()\tifRegion - as Void", "contents": "SetPretranslation(${1:x as Integer}, ${2:y as Integer})"},
    {"trigger": "GetPretranslationX()\tifRegion - as Integer", "contents": "GetPretranslationX()"},
    {"trigger": "GetPretranslationY()\tifRegion - as Integer", "contents": "GetPretranslationY()"},
    {"trigger": "SetScaleMode()\tifRegion - as Void", "contents": "SetScaleMode(${1:mode as Integer})"},
    {"trigger": "GetScaleMode()\tifRegion - as Integer", "contents": "GetScaleMode()"},
    {"trigger": "SetCollisionType()\tifRegion - as Void", "contents": "SetCollisionType(${1:collisionType as Integer})"},
    {"trigger": "GetCollisionType()\tifRegion - as Integer", "contents": "GetCollisionType()"},
    {"trigger": "SetCollisionRectangle()\tifRegion - as Void", "contents": "SetCollisionRectangle(${1:xOffset as Integer}, ${2:yOffset as Integer}, ${3:width as Integer}, ${4:height as Integer})"},
    {"trigger": "SetCollisionCircle()\tifRegion - as Void", "contents": "SetCollisionCircle(${1:xOffset as Integer}, ${2:yOffset as Integer}, ${3:radius as Integer})"},

    // ifRegistry Methods
    {"trigger": "GetSectionList()\tifRegistry - as Object", "contents": "GetSectionList()"},
    {"trigger": "Delete()\tifRegistry - as Boolean", "contents": "Delete(${1:section as String})"},
    {"trigger": "Flush()\tifRegistry - as Boolean", "contents": "Flush()"},

    // ifRegistrySection Methods
    {"trigger": "Read()\tifRegistrySection - as String", "contents": "Read(${1:key as String})"},
    {"trigger": "Write()\tifRegistrySection - as Boolean", "contents": "Write(${1:key as String}, ${2:value as String})"},
    {"trigger": "Delete()\tifRegistrySection - as Boolean", "contents": "Delete(${1:key as String})"},
    {"trigger": "Exists()\tifRegistrySection - as Boolean", "contents": "Exists(${1:key as String})"},
    {"trigger": "Flush()\tifRegistrySection - as Boolean", "contents": "Flush()"},
    {"trigger": "GetKeyList()\tifRegistrySection - as Object", "contents": "GetKeyList()"},

    // ifRSA Methods
    {"trigger": "SetPrivateKey()\tifRSA - as Integer", "contents": "SetPrivateKey(${1:keyFileName as String})"},
    {"trigger": "SetPublicKey()\tifRSA - as Integer", "contents": "SetPublicKey(${1:keyFileName as String})"},
    {"trigger": "SetDigestAlgorithm()\tifRSA - as Boolean", "contents": "SetDigestAlgorithm(${1:digestAlgorithm as String})"},
    {"trigger": "Sign()\tifRSA - as Object", "contents": "Sign(${1:digest as Object})"},
    {"trigger": "Verify()\tifRSA - as Integer", "contents": "Verify(${1:digest as Object}, ${2:signature as Object})"},

    // ifSearchHistory
    {"trigger": "Clear()\tifSearchHistory - as Void", "contents": "Clear()"},
    {"trigger": "Push()\tifSearchHistory - as Void", "contents": "Push(${1:searchTerm as String})"},
    {"trigger": "GetAsArray()\tifSearchHistory - as Object", "contents": "GetAsArray()"},

    // ifSearchScreen
    {"trigger": "SetSearchTermHeaderText()\tifSearchScreen - as Void", "contents": "SetSearchTermHeaderText(${1:text as String})"},
    {"trigger": "SetSearchButtonText()\tifSearchScreen - as Void", "contents": "SetSearchButtonText(${1:text as String})"},
    {"trigger": "SetClearButtonText()\tifSearchScreen - as Void", "contents": "SetClearButtonText(${1:text as String})"},
    {"trigger": "AddSearchTerm()\tifSearchScreen - as Void", "contents": "AddSearchTerm(${1:searchTerm as String})"},
    {"trigger": "SetSearchTerms()\tifSearchScreen - as Void", "contents": "SetSearchTerms(${1:searchTerms as Object})"},
    {"trigger": "ClearSearchTerms()\tifSearchScreen - as Void", "contents": "ClearSearchTerms()"},
    {"trigger": "SetSearchButtonText()\tifSearchScreen - as Void", "contents": "SetSearchButtonText(${1:text as String})"},
    {"trigger": "SetBreadcrumbText()\tifSearchScreen - as Void", "contents": "SetBreadcrumbText(${1:breadcrumb1 as String}, ${2:breadcrumb2 as String})"},
    {"trigger": "SetBreadcrumbEnabled()\tifSearchScreen - as Void", "contents": "SetBreadcrumbEnabled(${1:enable as Boolean})"},
    {"trigger": "SetClearButtonEnabled()\tifSearchScreen - as Void", "contents": "SetClearButtonEnabled(${1:enable as Boolean})"},
    {"trigger": "SetEmptySearchTerms()\tifSearchScreen - as Void", "contents": "SetEmptySearchTerms(${1:text as String})"},
    {"trigger": "SetSearchText()\tifSearchScreen - as Void", "contents": "SetSearchText(${1:text as String})"},


    // ifSlideShow
    {"trigger": "SetContentList()\tifSlideShow - as Void", "contents": "SetContentList(${1:contentList as Object})"},
    {"trigger": "AddContent()\tifSlideShow - as Void", "contents": "AddContent(${1:contentItem as Object})"},
    {"trigger": "ClearContent()\tifSlideShow - as Void", "contents": "ClearContent()"},
    {"trigger": "CountButtons()\tifSlideShow - as Integer", "contents": "CountButtons()"},
    {"trigger": "SetNext()\tifSlideShow - as Void", "contents": "SetNext(${1:item as Integer}, ${2:isImmediate as Boolean})"},
    {"trigger": "SetPeriod()\tifSlideShow - as Void", "contents": "SetPeriod(${1:seconds as Integer})"},
    {"trigger": "SetTextOverlayHoldTime()\tifSlideShow - as Void", "contents": "SetTextOverlayHoldTime(${1:milliseconds as Integer})"},
    {"trigger": "Pause()\tifSlideShow - as Boolean", "contents": "Pause()"},
    {"trigger": "Resume()\tifSlideShow - as Boolean", "contents": "Resume()"},
    {"trigger": "SetTextOverlayIsVisible()\tifSlideShow - as Void", "contents": "SetTextOverlayIsVisible(${1:isVisible as Boolean})"},
    {"trigger": "AddButton()\tifSlideShow - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},
    {"trigger": "AddRatingButton()\tifSlideShow - as Boolean", "contents": "AddRatingButton(${1:id as Integer}, ${2:rating as Integer})"},
    {"trigger": "ClearButtons()\tifSlideShow - as Void", "contents": "ClearButtons()"},
    {"trigger": "SetUnderscan()\tifSlideShow - as Void", "contents": "SetUnderscan(${1:percentage as Float})"},
    {"trigger": "SetDisplayMode()\tifSlideShow - as Void", "contents": "SetDisplayMode(${1:displayMode as String})"},
    {"trigger": "SetMaxUpscale()\tifSlideShow - as Void", "contents": "SetMaxUpscale(${1:maxUpscale as Float})"},
    {"trigger": "GetMaxUpscale()\tifSlideShow - as Float", "contents": "GetMaxUpscale()"},
    {"trigger": "SetBorderColor()\tifSlideShow - as Void", "contents": "SetBorderColor(${1:color as String})"},

    // ifSocket Methods
    {"trigger": "Send()\tifSocket - as Integer", "contents": "Send(${1:data as Object}, ${2:startIndex as Integer}, ${3:length as Integer})"},
    {"trigger": "SendStr()\tifSocket - as Integer", "contents": "SendStr(${1:data as String})"},
    {"trigger": "Receive()\tifSocket - as Integer", "contents": "Receive(${1:data as Object}, ${2:startIndex as Integer}, ${3:length as Integer})"},
    {"trigger": "ReceiveStr()\tifSocket - as String", "contents": "ReceiveStr(${1:length as String})"},
    {"trigger": "Close()\tifSocket - as Void", "contents": "Close()"},
    {"trigger": "SetAddress()\tifSocket - as Boolean", "contents": "SetAddress(${1:sockAddr as Object})"},
    {"trigger": "GetAddress()\tifSocket - as Object", "contents": "GetAddress()"},
    {"trigger": "SetSendToAddress()\tifSocket - as Boolean", "contents": "SetSendToAddress(${1:sockAddr as Object})"},
    {"trigger": "GetSendToAddress()\tifSocket - as Object", "contents": "GetSendToAddress()"},
    {"trigger": "GetReceivedFromAddress()\tifSocket - as Object", "contents": "GetReceivedFromAddress()"},
    {"trigger": "GetCountRcvBuf()\tifSocket - as Integer", "contents": "GetCountRcvBuf()"},
    {"trigger": "GetCountSendBuf()\tifSocket - as Integer", "contents": "GetCountSendBuf()"},
    {"trigger": "Status()\tifSocket - as Integer", "contents": "Status()"},

    // ifSocketAddress Methods
    {"trigger": "SetAddress()\tifSocketAddress - as Boolean", "contents": "SetAddress(${1:address as String})"},
    {"trigger": "GetAddress()\tifSocketAddress - as String", "contents": "GetAddress()"},
    {"trigger": "SetHostName()\tifSocketAddress - as Boolean", "contents": "SetHostName(${1:hostname as String})"},
    {"trigger": "GetHostName()\tifSocketAddress - as String", "contents": "GetHostName()"},
    {"trigger": "SetPort()\tifSocketAddress - as Boolean", "contents": "SetPort(${1:port as Integer})"},
    {"trigger": "GetPort()\tifSocketAddress - as Integer", "contents": "GetPort()"},
    {"trigger": "IsAddressValid()\tifSocketAddress - as Boolean", "contents": "IsAddressValid()"},

    // ifSocketAsync Methods
    {"trigger": "IsReadable()\tifSocketAsync - as Boolean", "contents": "IsReadable()"},
    {"trigger": "IsWritable()\tifSocketAsync - as Boolean", "contents": "IsWritable()"},
    {"trigger": "IsException()\tifSocketAsync - as Boolean", "contents": "IsException()"},
    {"trigger": "NotifyReadable()\tifSocketAsync - as Void", "contents": "NotifyReadable(${1:enable as Boolean})"},
    {"trigger": "NotifyWritable()\tifSocketAsync - as Void", "contents": "NotifyWritable(${1:enable as Boolean})"},
    {"trigger": "NotifyException()\tifSocketAsync - as Void", "contents": "NotifyException(${1:enable as Boolean})"},
    {"trigger": "GetID()\tifSocketAsync - as Integer", "contents": "GetID()"},

    // ifSocketCast Methods
    {"trigger": "GetBroadcast()\tifSocketCast - as Boolean", "contents": "GetBroadcast()"},
    {"trigger": "SetBroadcast()\tifSocketCast - as Boolean", "contents": "SetBroadcast(${1:enable as Boolean})"},
    {"trigger": "JoinGroup()\tifSocketCast - as Boolean", "contents": "JoinGroup(${1:ipAddress as Object})"},
    {"trigger": "DropGroup()\tifSocketCast - as Boolean", "contents": "DropGroup(${1:ipAddress as Object})"},
    {"trigger": "GetMulticastLoop()\tifSocketCast - as Boolean", "contents": "GetMulticastLoop()"},
    {"trigger": "SetMulticastLoop()\tifSocketCast - as Boolean", "contents": "SetMulticastLoop(${1:enable as Boolean})"},
    {"trigger": "GetMulticastTTL()\tifSocketCast - as Integer", "contents": "GetMulticastTTL()"},
    {"trigger": "SetMulticastTTL()\tifSocketCast - as Boolean", "contents": "SetMulticastTTL(${1:ttl as Integer})"},

    // ifSocketConnection Methods
    {"trigger": "Listen()\tifSocketConnection - as Boolean", "contents": "Listen(${1:backlog as Integer})"},
    {"trigger": "IsListening()\tifSocketConnection - as Boolean", "contents": "IsListening()"},
    {"trigger": "Connect()\tifSocketConnection - as Boolean", "contents": "Connect()"},
    {"trigger": "Accept()\tifSocketConnection - as Object", "contents": "Accept()"},
    {"trigger": "IsConnected()\tifSocketConnection - as Boolean", "contents": "IsConnected()"},

    // ifSocketConnectionOption Methods
    {"trigger": "GetKeepAlive()\tifSocketConnectionOption - as Boolean", "contents": "GetKeepAlive()"},
    {"trigger": "SetKeepAlive()\tifSocketConnectionOption - as Boolean", "contents": "SetKeepAlive(${1:enable as Boolean})"},
    {"trigger": "GetLinger()\tifSocketConnectionOption - as Integer", "contents": "GetLinger()"},
    {"trigger": "SetLinger()\tifSocketConnectionOption - as Boolean", "contents": "SetLinger(${1:time as Integer})"},
    {"trigger": "GetMaxSeg()\tifSocketConnectionOption - as Integer", "contents": "GetMaxSeg()"},
    {"trigger": "SetMaxSeg()\tifSocketConnectionOption - as Boolean", "contents": "SetMaxSeg(${1:time as Integer})"},
    {"trigger": "GetNoDelay()\tifSocketConnectionOption - as Boolean", "contents": "GetNoDelay()"},
    {"trigger": "SetNoDelay()\tifSocketConnectionOption - as Boolean", "contents": "SetNoDelay(${1:enable as Boolean})"},

    // ifSocketConnectionStatus Methods
    {"trigger": "eConnAborted()\tifSocketConnectionStatus - as Boolean", "contents": "eConnAborted()"},
    {"trigger": "eConnRefused()\tifSocketConnectionStatus - as Boolean", "contents": "eConnRefused()"},
    {"trigger": "eConnReset()\tifSocketConnectionStatus - as Boolean", "contents": "eConnReset()"},
    {"trigger": "eIsConn()\tifSocketConnectionStatus - as Boolean", "contents": "eIsConn()"},
    {"trigger": "eNotConn()\tifSocketConnectionStatus - as Boolean", "contents": "eNotConn()"},

    // ifSocketOption Methods
    {"trigger": "GetTTL()\tifSocketOption - as Integer", "contents": "GetTTL()"},
    {"trigger": "SetTTL()\tifSocketOption - as Boolean", "contents": "SetTTL(${1:ttl as Integer})"},
    {"trigger": "GetReuseAddr()\tifSocketOption - as Boolean", "contents": "GetReuseAddr()"},
    {"trigger": "SetReuseAddr()\tifSocketOption - as Void", "contents": "SetReuseAddr(${1:reuse as Boolean})"},
    {"trigger": "GetOOBInline()\tifSocketOption - as Boolean", "contents": "GetOOBInline()"},
    {"trigger": "SetOOBInline()\tifSocketOption - as Boolean", "contents": "SetOOBInline(${1:inline as Boolean})"},
    {"trigger": "GetSendBuf()\tifSocketOption - as Integer", "contents": "GetSendBuf()"},
    {"trigger": "SetSendBuf()\tifSocketOption - as Boolean", "contents": "SetSendBuf(${1:size as Integer})"},
    {"trigger": "GetRcvBuf()\tifSocketOption - as Integer", "contents": "GetRcvBuf()"},
    {"trigger": "SetRcvBuf()\tifSocketOption - as Boolean", "contents": "SetRcvBuf(${1:size as Integer})"},
    {"trigger": "GetSendTimeout()\tifSocketOption - as Integer", "contents": "GetSendTimeout()"},
    {"trigger": "SetSendTimeout()\tifSocketOption - as Boolean", "contents": "SetSendTimeout(${1:timeout as Integer})"},
    {"trigger": "GetReceiveTimeout()\tifSocketOption - as Integer", "contents": "GetReceiveTimeout()"},
    {"trigger": "SetReceiveTimeout()\tifSocketOption - as Boolean", "contents": "SetReceiveTimeout(${1:timeout as Integer})"},

    // ifSocketStatus Methods
    {"trigger": "eAgain()\tifSocketStatus - as Boolean", "contents": "eAgain()"},
    {"trigger": "eAlready()\tifSocketStatus - as Boolean", "contents": "eAlready()"},
    {"trigger": "eBadAddr()\tifSocketStatus - as Boolean", "contents": "eBadAddr()"},
    {"trigger": "eDestAddrReq()\tifSocketStatus - as Boolean", "contents": "eDestAddrReq()"},
    {"trigger": "eHostUnreach()\tifSocketStatus - as Boolean", "contents": "eHostUnreach()"},
    {"trigger": "eInvalid()\tifSocketStatus - as Boolean", "contents": "eInvalid()"},
    {"trigger": "eInProgress()\tifSocketStatus - as Boolean", "contents": "eInProgress()"},
    {"trigger": "eWouldBlock()\tifSocketStatus - as Boolean", "contents": "eWouldBlock()"},
    {"trigger": "eSuccess()\tifSocketStatus - as Boolean", "contents": "eSuccess()"},
    {"trigger": "eOK()\tifSocketStatus - as Boolean", "contents": "eOK()"},

    // ifSourceIdentity Methods
    {"trigger": "SetSourceIdentity()\tifSourceIdentity - as Void", "contents": "SetSourceIdentity(${1:id as Integer})"},
    {"trigger": "GetSourceIdentity()\tifSourceIdentity - as Integer", "contents": "GetSourceIdentity()"},

    // ifSpringboardScreen Methods
    {"trigger": "SetContent()\tifSpringboardScreen - as Void", "contents": "SetContent(${1:content as Object})"},
    {"trigger": "SetDescriptionStyle()\tifSpringboardScreen - as Void", "contents": "SetDescriptionStyle(${1:style as String})"},
    {"trigger": "SetProgressIndicatorEnabled()\tifSpringboardScreen - as Void", "contents": "SetProgressIndicatorEnabled(${1:enable as Boolean})"},
    {"trigger": "SetProgressIndicator()\tifSpringboardScreen - as Void", "contents": "SetProgressIndicator(${1:progress as Integer}, ${2:max as Integer})"},
    {"trigger": "AddButton()\tifSpringboardScreen - as Boolean", "contents": "AddButton(${1:buttonID as Integer}, ${2:title as String})"},
    {"trigger": "AddThumbsUpDownButton()\tifSpringboardScreen - as Boolean", "contents": "AddThumbsUpDownButton(${1:buttonID as Integer}, ${2:thumbRating as Integer})"},
    {"trigger": "AddThumbsUpDownButtonWithTips()\tifSpringboardScreen - as Boolean", "contents": "AddThumbsUpDownButtonWithTips(${1:buttonID as Integer}, ${2:thumbRating as Integer}, ${3:tipText as Object})"},
    {"trigger": "AddRatingButton()\tifSpringboardScreen - as Boolean", "contents": "AddRatingButton(${1:buttonID as Integer}, ${2:userRating as Integer}, ${3:aggregateRating as Integer})"},
    {"trigger": "SetStaticRatingEnabled()\tifSpringboardScreen - as Void", "contents": "SetStaticRatingEnabled(${1:enable as Boolean})"},
    {"trigger": "ClearButtons()\tifSpringboardScreen - as Void", "contents": "ClearButtons()"},
    {"trigger": "SetBreadcrumbText()\tifSpringboardScreen - as Void", "contents": "SetBreadcrumbText(${1:breadcrumb1 as String}, ${2:breadcrumb2 as String})"},
    {"trigger": "SetBreadcrumbEnabled()\tifSpringboardScreen - as Void", "contents": "SetBreadcrumbEnabled(${1:enable as Boolean})"},
    {"trigger": "PrefetchPoster()\tifSpringboardScreen - as Void", "contents": "PrefetchPoster(${1:sdPosterUrl as String}, ${2:hdPosterUrl as String})"},
    {"trigger": "AllowUpdates()\tifSpringboardScreen - as Void", "contents": "AllowUpdates(${1:allow as Boolean})"},
    {"trigger": "CountButtons()\tifSpringboardScreen - as Integer", "contents": "CountButtons()"},
    {"trigger": "AllowNavLeft()\tifSpringboardScreen - as Void", "contents": "AllowNavLeft(${1:allow as Boolean})"},
    {"trigger": "AllowNavRight()\tifSpringboardScreen - as Void", "contents": "AllowNavRight(${1:allow as Boolean})"},
    {"trigger": "AllowNavRewind()\tifSpringboardScreen - as Void", "contents": "AllowNavRewind(${1:allow as Boolean})"},
    {"trigger": "AllowNavFastForward()\tifSpringboardScreen - as Void", "contents": "AllowNavFastForward(${1:allow as Boolean})"},
    {"trigger": "SetPosterStyle()\tifSpringboardScreen - as Void", "contents": "SetPosterStyle(${1:style as String})"},
    {"trigger": "SetAdURL()\tifSpringboardScreen - as Void", "contents": "SetAdURL(${1:sdAdURL as String}, ${2:hdAdURL as String})"},
    {"trigger": "SetAdSelectable()\tifSpringboardScreen - as Void", "contents": "SetAdSelectable(${1:selectable as Boolean})"},
    {"trigger": "SetAdDisplayMode()\tifSpringboardScreen - as Void", "contents": "SetAdDisplayMode(${1:displayMode as String})"},
    {"trigger": "SetTitle()\tifSpringboardScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "UseStableFocus()\tifSpringboardScreen - as Void", "contents": "UseStableFocus(${1:enable as Boolean})"},
    {"trigger": "SetDisplayMode()\tifSpringboardScreen - as Void", "contents": "SetDisplayMode(${1:displayMode as String})"},

    // ifSprite Methods
    {"trigger": "MoveTo()\tifSprite - as Void", "contents": "MoveTo(${1:x as Integer}, ${2:y as Integer})"},
    {"trigger": "MoveOffset()\tifSprite - as Void", "contents": "MoveOffset(${1:xOffset as Integer}, ${2:yOffset as Integer})"},
    {"trigger": "GetX()\tifSprite - as Integer", "contents": "GetX()"},
    {"trigger": "GetY()\tifSprite - as Integer", "contents": "GetY()"},
    {"trigger": "SetZ()\tifSprite - as Void", "contents": "SetZ(${1:z as Integer})"},
    {"trigger": "GetZ()\tifSprite - as Integer", "contents": "GetZ()"},
    {"trigger": "SetDrawableFlag()\tifSprite - as Void", "contents": "SetDrawableFlag(${1:enable as Boolean})"},
    {"trigger": "GetDrawableFlag()\tifSprite - as Boolean", "contents": "GetDrawableFlag()"},
    {"trigger": "SetMemberFlags()\tifSprite - as Void", "contents": "SetMemberFlags(${1:flags as Integer})"},
    {"trigger": "GetMemberFlags()\tifSprite - as Integer", "contents": "GetMemberFlags()"},
    {"trigger": "SetCollidableFlags()\tifSprite - as Void", "contents": "SetCollidableFlags(${1:flags as Integer})"},
    {"trigger": "GetCollidableFlags()\tifSprite - as Integer", "contents": "GetCollidableFlags()"},
    {"trigger": "SetRegion()\tifSprite - as Void", "contents": "SetRegion(${1:region as Object})"},
    {"trigger": "GetRegion()\tifSprite - as Object", "contents": "GetRegion()"},
    {"trigger": "OffsetRegion()\tifSprite - as Void", "contents": "OffsetRegion(${1:x as Integer}, ${2:y as Integer}, ${3:width as Integer}, ${4:height as Integer})"},
    {"trigger": "SetData()\tifSprite - as Void", "contents": "SetData(${1:data as Dynamic})"},
    {"trigger": "GetData()\tifSprite - as Dynamic", "contents": "GetData()"},
    {"trigger": "CheckCollision()\tifSprite - as Object", "contents": "CheckCollision()"},
    {"trigger": "CheckMultipleCollisions()\tifSprite - as Object", "contents": "CheckMultipleCollisions()"},
    {"trigger": "Remove()\tifSprite - as Void", "contents": "Remove()"},

    // ifStringOps
    {"trigger": "SetString()\tifStringOps - as Void", "contents": "SetString(${1:s as String}, ${2:len as Integer})"},
    {"trigger": "AppendString()\tifStringOps - as Void", "contents": "AppendString(${1:s as String}, ${2:len as Integer})"},
    {"trigger": "Len()\tifStringOps - as Integer", "contents": "Len()"},
    {"trigger": "Left()\tifStringOps - as String", "contents": "Left(${1:len as Integer})"},
    {"trigger": "Right()\tifStringOps - as String", "contents": "Right(${1:len as Integer})"},
    {"trigger": "Mid()\tifStringOps - as String", "contents": "Mid(${1:start_index as Integer}${2:[, num_chars as Integer]})"},
    {"trigger": "Instr()\tifStringOps - as Integer", "contents": "Instr(${1:substring as String})"},
    {"trigger": "Replace()\tifStringOps - as String", "contents": "Replace(${1:from as String}, ${2:to as String})"},
    {"trigger": "Instr()\tifStringOps - as Integer", "contents": "Instr(${1:start_index as Integer}, ${2:substring as String})"},
    {"trigger": "Trim()\tifStringOps - as String", "contents": "Trim()"},
    {"trigger": "ToInt()\tifStringOps - as Integer", "contents": "ToInt()"},
    {"trigger": "ToFloat()\tifStringOps - as Float", "contents": "ToFloat()"},
    {"trigger": "Tokenize()\tifStringOps - as Object", "contents": "Tokenize(${1:delim as String})"},
    {"trigger": "GetEntityEncode()\tifStringOps - as String", "contents": "GetEntityEncode()"},

    // ifSystemLog Methods
    {"trigger": "EnableType()\tifSystemLog - as Void", "contents": "EnableType(${1:logType as String})"},

    // ifTextScreen Methods
    {"trigger": "SetTitle()\tifTextScreen - as Void", "contents": "SetTitle(${1:title as String})"},
    {"trigger": "SetBreadcrumbText()\tifTextScreen - as Void", "contents": "SetBreadcrumbText(${1:breadcrumb1 as String}, ${2:breadcrumb2 as String})"},
    {"trigger": "SetHeaderText()\tifTextScreen - as Void", "contents": "SetHeaderText(${1:text as String})"},
    {"trigger": "SetText()\tifTextScreen - as Void", "contents": "SetText(${1:text as String})"},
    {"trigger": "AddText()\tifTextScreen - as Void", "contents": "AddText(${1:text as String})"},
    {"trigger": "AddButton()\tifTextScreen - as Boolean", "contents": "AddButton(${1:id as Integer}, ${2:title as String})"},

    // ifTextureManager Methods
    {"trigger": "RequestTexture()\tifTextureManager - as Void", "contents": "RequestTexture(${1:req as Object})"},
    {"trigger": "CancelRequest()\tifTextureManager - as Void", "contents": "CancelRequest(${1:req as Object})"},
    {"trigger": "UnloadBitmap()\tifTextureManager - as Void", "contents": "UnloadBitmap(${1:url as String})"},
    {"trigger": "Cleanup()\tifTextureManager - as Void", "contents": "Cleanup()"},

    // ifTextureRequest Methods
    {"trigger": "GetId()\tifTextureRequest - as Integer", "contents": "GetId()"},
    {"trigger": "GetState()\tifTextureRequest - as Integer", "contents": "GetState()"},
    {"trigger": "SetAsync()\tifTextureRequest - as Integer", "contents": "SetAsync(${1:async as Boolean})"},
    {"trigger": "SetSize()\tifTextureRequest - as Void", "contents": "SetSize(${1:width as Integer}, ${2:height as Integer})"},
    {"trigger": "SetScaleMode()\tifTextureRequest - as Void", "contents": "SetScaleMode(${1:mode as Integer})"},

    // ifTimespan Methods
    {"trigger": "Mark()\tifTimespan - as Void", "contents": "Mark()"},
    {"trigger": "TotalMilliseconds()\tifTimespan - as Integer", "contents": "TotalMilliseconds()"},
    {"trigger": "TotalSeconds()\tifTimespan - as Integer", "contents": "TotalSeconds()"},
    {"trigger": "GetSecondsToISO8601Date()\tifTimespan - as Integer", "contents": "GetSecondsToISO8601Date(${1:date as String})"},

    // ifUrlTransfer
    {"trigger": "GetIdentity()\tifUrlTransfer - as Integer", "contents": "GetIdentity()"},
    {"trigger": "SetUrl()\tifUrlTransfer - as Void", "contents": "SetUrl(${1:url as String})"},
    {"trigger": "GetUrl()\tifUrlTransfer - as String", "contents": "GetUrl()"},
    {"trigger": "SetRequest()\tifUrlTransfer - as Void", "contents": "SetRequest(${1:req as String})"},
    {"trigger": "GetRequest()\tifUrlTransfer - as String", "contents": "GetRequest()"},
    {"trigger": "GetToString()\tifUrlTransfer - as String", "contents": "GetToString()"},
    {"trigger": "GetToFile()\tifUrlTransfer - as Integer", "contents": "GetToFile(${1:filename as String})"},
    {"trigger": "AsyncGetToString()\tifUrlTransfer - as Boolean", "contents": "AsyncGetToString()"},
    {"trigger": "AsyncGetToFile()\tifUrlTransfer - as Boolean", "contents": "AsyncGetToFile(${1:filename as String})"},
    {"trigger": "Head()\tifUrlTransfer - as Dynamic", "contents": "Head()"},
    {"trigger": "AsyncHead()\tifUrlTransfer - as Boolean", "contents": "AsyncHead()"},
    {"trigger": "PostFromString()\tifUrlTransfer - as Integer", "contents": "PostFromString(${1:request as String})"},
    {"trigger": "PostFromFile()\tifUrlTransfer - as Integer", "contents": "PostFromFile(${1:filename as String})"},
    {"trigger": "AsyncPostFromString()\tifUrlTransfer - as Boolean", "contents": "AsyncPostFromString(${1:request as String})"},
    {"trigger": "AsyncPostFromFile()\tifUrlTransfer - as Boolean", "contents": "AsyncPostFromFile(${1:filename as String})"},
    {"trigger": "AsyncCancel()\tifUrlTransfer - as Boolean", "contents": "AsyncCancel()"},
    {"trigger": "RetainBodyOnError()\tifUrlTransfer - as Boolean", "contents": "RetainBodyOnError(${1:retain as Boolean})"},
    {"trigger": "SetUserAndPassword()\tifUrlTransfer - as Boolean", "contents": "SetUserAndPassword(${1:user as String}, ${2:password as String})"},
    {"trigger": "SetMinimumTransferRate()\tifUrlTransfer - as Boolean", "contents": "SetMinimumTransferRate(${1:bytes_per_second as Integer}, ${2:period_in_seconds as Integer})"},
    {"trigger": "GetFailureReason()\tifUrlTransfer - as String", "contents": "GetFailureReason()"},
    {"trigger": "EnableEncodings()\tifUrlTransfer - as Boolean", "contents": "EnableEncodings(${1:enable as Boolean})"},
    {"trigger": "Escape()\tifUrlTransfer - as String", "contents": "Escape(${1:text as String})"},
    {"trigger": "Unescape()\tifUrlTransfer - as String", "contents": "Unescape(${1:text as String})"},
    {"trigger": "UrlEncode()\tifUrlTransfer - as String", "contents": "UrlEncode(${1:url as String})"},
    {"trigger": "EnableResume()\tifUrlTransfer - as Boolean", "contents": "EnableResume(${1:enable as Boolean})"},
    {"trigger": "EnablePeerVerification()\tifUrlTransfer - as Boolean", "contents": "EnablePeerVerification(${1:enable as Boolean})"},
    {"trigger": "EnableHostVerification()\tifUrlTransfer - as Boolean", "contents": "EnableHostVerification(${1:enable as Boolean})"},
    {"trigger": "EnableFreshConnection()\tifUrlTransfer - as Boolean", "contents": "EnableFreshConnection(${1:enable as Boolean})"},

    // ifVideoPlayer Methods
    {"trigger": "SetContentList()\tifVideoPlayer - as Void", "contents": "SetContentList(${1:contentList as Object})"},
    {"trigger": "AddContent()\tifVideoPlayer - as Void", "contents": "AddContent(${1:contentItem as Object})"},
    {"trigger": "ClearContent()\tifVideoPlayer - as Void", "contents": "ClearContent()"},
    {"trigger": "Play()\tifVideoPlayer - as Boolean", "contents": "Play()"},
    {"trigger": "Stop()\tifVideoPlayer - as Boolean", "contents": "Stop()"},
    {"trigger": "Pause()\tifVideoPlayer - as Boolean", "contents": "Pause()"},
    {"trigger": "Resume()\tifVideoPlayer - as Boolean", "contents": "Resume()"},
    {"trigger": "SetLoop()\tifVideoPlayer - as Void", "contents": "SetLoop(${1:loop as Boolean})"},
    {"trigger": "SetNext()\tifVideoPlayer - as Void", "contents": "SetNext(${1:item as Integer})"},
    {"trigger": "Seek()\tifVideoPlayer - as Boolean", "contents": "Seek(${1:offsetMs as Integer})"},
    {"trigger": "SetPositionNotificationPeriod()\tifVideoPlayer - as Void", "contents": "SetPositionNotificationPeriod(${1:period as Integer})"},
    {"trigger": "SetCGMS()\tifVideoPlayer - as Void", "contents": "SetCGMS(${1:level as Integer})"},
    {"trigger": "SetDestinationRect()\tifVideoPlayer - as Void", "contents": "SetDestinationRect(${1:rect as Object})"},
    {"trigger": "SetDestinationRect()\tifVideoPlayer - as Void", "contents": "SetDestinationRect(${1:x as Integer}, ${2:y as Integer}, ${3:w as Integer}, ${4:h as Integer})"},
    {"trigger": "SetMaxVideoDecodeResolution()\tifVideoPlayer - as Void", "contents": "SetMaxVideoDecodeResolution(${1:width as Integer}, ${2:height as Integer})"},
    {"trigger": "GetPlaybackDuration()\tifVideoPlayer - as Integer", "contents": "GetPlaybackDuration()"},
    {"trigger": "SetTimedMetaDataForKeys()\tifVideoPlayer - as Void", "contents": "SetTimedMetaDataForKeys(${1:keys as Dynamic})"},
    {"trigger": "GetCaptionRenderer()\tifVideoPlayer - as Object", "contents": "GetCaptionRenderer()"},
    {"trigger": "SetMacrovisionLevel()\tifVideoPlayer - as Void", "contents": "SetMacrovisionLevel(${1:level as Integer})"},

    // ifVideoScreen Methods
    {"trigger": "SetContent()\tifVideoScreen - as Void", "contents": "SetContent(${1:content as Object})"},
    {"trigger": "SetPositionNotificationPeriod()\tifVideoScreen - as Void", "contents": "SetPositionNotificationPeriod(${1:period as Integer})"},
    {"trigger": "SetPreviewMode()\tifVideoScreen - as Void", "contents": "SetPreviewMode(${1:enable as Boolean})"},
    {"trigger": "SetCGMS()\tifVideoScreen - as Void", "contents": "SetCGMS(${1:level as Integer})"},
    {"trigger": "Pause()\tifVideoScreen - as Void", "contents": "Pause()"},
    {"trigger": "Resume()\tifVideoScreen - as Void", "contents": "Resume()"},
    {"trigger": "Seek()\tifVideoScreen - as Void", "contents": "Seek(${1:milliSeconds as Integer})"},
    {"trigger": "SetDestinationRect()\tifVideoScreen - as Void", "contents": "SetDestinationRect(${1:rect as Object})"},
    {"trigger": "SetDestinationRect()\tifVideoScreen - as Void", "contents": "SetDestinationRect(${1:x as Integer}, ${2:y as Integer}, ${3:w as Integer}, ${4:h as Integer})"},
    {"trigger": "SetMacrovisionLevel()\tifVideoScreen - as Void", "contents": "SetMacrovisionLevel(${1:level as Integer})"},
    {"trigger": "SetMaxVideoDecodeResolution()\tifVideoScreen - as Void", "contents": "SetMaxVideoDecodeResolution(${1:width as Integer}, ${2:height as Integer})"},
    {"trigger": "ShowSubtitle()\tifVideoScreen - as Void", "contents": "ShowSubtitle(${1:enable as Boolean})"},
    {"trigger": "ShowSubtitleOnReplay()\tifVideoScreen - as Void", "contents": "ShowSubtitleOnReplay(${1:enable as Boolean})"},
    {"trigger": "SetLoop()\tifVideoScreen - as Void", "contents": "SetLoop(${1:enable as Boolean})"},
    {"trigger": "EnableTrickPlay()\tifVideoScreen - as Void", "contents": "EnableTrickPlay(${1:enable as Boolean})"},    
    {"trigger": "SetTimedMetaDataForKeys()\tifVideoScreen - as Void", "contents": "SetTimedMetaDataForKeys(${1:keys as Dynamic})"},

    // ifXMLElement Methods
    {"trigger": "Parse()\tifXMLElement - as Boolean", "contents": "Parse(${1:xml as String})"},
    {"trigger": "GetBody()\tifXMLElement - as Object", "contents": "GetBody()"},
    {"trigger": "GetAttributes()\tifXMLElement - as Object", "contents": "GetAttributes()"},
    {"trigger": "GetName()\tifXMLElement - as String", "contents": "GetName()"},
    {"trigger": "GetText()\tifXMLElement - as String", "contents": "GetText()"},
    {"trigger": "GetChildElements()\tifXMLElement - as Object", "contents": "GetChildElements()"},
    {"trigger": "GetChildNodes()\tifXMLElement - as Object", "contents": "GetChildNodes()"},
    {"trigger": "GetNamedElements()\tifXMLElement - as Object", "contents": "GetNamedElements(${1:name as String})"},
    {"trigger": "GetNamedElementsCi()\tifXMLElement - as Object", "contents": "GetNamedElementsCi(${1:name as String})"},
    {"trigger": "IsName()\tifXMLElement - as Boolean", "contents": "IsName(${1:name as String})"},
    {"trigger": "HasAttribute()\tifXMLElement - as Boolean", "contents": "HasAttribute(${1:attr as String})"},
    {"trigger": "SetBody()\tifXMLElement - as Void", "contents": "SetBody(${1:body as Object})"},
    {"trigger": "AddBodyElement()\tifXMLElement - as Object", "contents": "AddBodyElement()"},
    {"trigger": "AddElement()\tifXMLElement - as Object", "contents": "AddElement(${1:name as String})"},
    {"trigger": "AddElementWithBody()\tifXMLElement - as Object", "contents": "AddElementWithBody(${1:name as String}, ${2:body as Object})"},
    {"trigger": "AddText()\tifXMLElement - as Void", "contents": "AddText(${1:text as String})"},
    {"trigger": "AddAttribute()\tifXMLElement - as Void", "contents": "AddAttribute(${1:attr as String}, ${2:value as String})"},
    {"trigger": "SetName()\tifXMLElement - as Void", "contents": "SetName(${1:name as String})"},
    {"trigger": "GenXML()\tifXMLElement - as String", "contents": "GenXML(${1:gen_header as Boolean})"},
    {"trigger": "GenXMLHdr()\tifXMLElement - as String", "contents": "GenXMLHdr(${1:hdr as String})"},
    {"trigger": "Clear()\tifXMLElement - as Void", "contents": "Clear()"},

    // ifXMLList Methods
    {"trigger": "GetNamedElements()\tifXMLList - as Object", "contents": "GetNamedElements(${1:name as String})"},
    {"trigger": "GetNamedElementsCi()\tifXMLList - as Object", "contents": "GetNamedElementsCi(${1:name as String})"},
    {"trigger": "Simplify()\tifXMLList - as Object", "contents": "Simplify()"},
    {"trigger": "GetAttributes()\tifXMLList - as Object", "contents": "GetAttributes()"},
    {"trigger": "GetText()\tifXMLList - as String", "contents": "GetText()"},
    {"trigger": "GetChildElements()\tifXMLList - as Object", "contents": "GetChildElements()"},

    // Applies To Multiple Interfaces
    {"trigger": "Show()\tifMulti - as Boolean", "contents": "Show()"},
    {"trigger": "Close()\tifMulti - as Void", "contents": "Close()"},

    // ifScreen Methods
    {"trigger": "SwapBuffers()\tMethod - as Void", "contents": "SwapBuffers()"},
    
    // ifDraw2D Methods
    {"trigger": "Clear()\tMethod - as Void", "contents": "Clear(${1:rgba as Integer})"},
    {"trigger": "GetWidth()\tMethod - as Integer", "contents": "GetWidth()"},
    {"trigger": "GetHeight()\tMethod - as Integer", "contents": "GetHeight()"},
    {"trigger": "GetByteArray()\tMethod - as Object", "contents": "GetByteArray(${1:x as Integer}, ${2:y as Integer}, ${3:width as Integer}, ${4:height as Integer})"},
    {"trigger": "GetAlphaEnable()\tMethod - as Boolean", "contents": "GetAlphaEnable()"},
    {"trigger": "SetAlphaEnable()\tMethod - as Void", "contents": "SetAlphaEnable(${1:enable as Boolean})"},
    {"trigger": "DrawRect()\tMethod - as Void", "contents": "DrawRect(${1:x as Integer}, ${2:y as Integer}, ${3:width as Integer}, ${4:height as Integer}, ${5:rgba as Integer})"},
    {"trigger": "DrawPoint()\tMethod - as Void", "contents": "DrawPoint(${1:x as Integer}, ${2:y as Integer}, ${3:size as Float}, ${4:rgba as Integer})"},
    {"trigger": "DrawLine()\tMethod - as Void", "contents": "DrawLine(${1:xStart as Integer}, ${2:yStart as Integer}, ${3:xEnd as Integer}, ${4:yEnd as Integer}, ${5:rgba as Integer})"},
    {"trigger": "DrawObject()\tMethod - as Boolean", "contents": "DrawObject(${1:x as Integer}, ${2:y as Integer}, ${3:src as Object}${4: [, rgba as Integer]})"},
    {"trigger": "DrawScaledObject()\tMethod - as Boolean", "contents": "DrawScaledObject(${1:x as Integer}, ${2:y as Integer}, ${3:scaleX as Float}, ${4:scaleY as Float}, ${5:src as Object}${6: [, rgba as Integer]})"},
    {"trigger": "DrawRotatedObject()\tMethod - as Boolean", "contents": "DrawRotatedObject(${1:x as Integer}, ${2:y as Integer}, ${3:theta as Float}, ${4:src as Object}${5: [, rgba as Integer]})"},
    {"trigger": "DrawText()\tMethod - as Boolean", "contents": "DrawText(${1:text as String}, ${2:x as Integer}, ${3:y as Integer}, ${4:rgba as Integer}, ${5:font as Object})"},
    {"trigger": "Finish()\tMethod - as Void", "contents": "Finish()"},

    // ifSetMessagePort Methods
    {"trigger": "SetMessagePort()\tifSetMessagePort - as Void", "contents": "SetMessagePort(${1:port as Object})"},
    
    // ifGetMessagePort Methods
    {"trigger": "GetMessagePort()\tifGetMessagePort - as Object", "contents": "GetMessagePort()"},
    
    // Advanced Snippits
    { "trigger": "Function\tCreate New Function", "contents": "Function ${1:newFunction} (${2})\n\t${3:}\nEnd Function" },
    { "trigger": "If\tIf Statement", "contents": "If ${1}\n\t${2}\nEnd If" },
    { "trigger": "Else If", "contents": "Else If ${1}\n\t${2}" },
    { "trigger": "CreateObject", "contents": "CreateObject(\"${1}\")" }

    ]
}